{"message":"unused label","code":{"code":"unused_labels","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":4052,"byte_end":4059,"line_start":111,"line_end":111,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    'c_2142: {","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_labels)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused label\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:111:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_2142: {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_labels)]` on by default\u001b[0m\n\n"}
{"message":"unused label","code":{"code":"unused_labels","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":11319,"byte_end":11326,"line_start":314,"line_end":314,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    'c_4379: {","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused label\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:314:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_4379: {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused label","code":{"code":"unused_labels","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":12897,"byte_end":12904,"line_start":352,"line_end":352,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    'c_4427: {","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused label\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:352:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_4427: {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused label","code":{"code":"unused_labels","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":17455,"byte_end":17462,"line_start":487,"line_end":487,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    'c_3937: {","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused label\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:487:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_3937: {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"this `if` statement can be collapsed","code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":19097,"byte_end":19387,"line_start":524,"line_end":532,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    if ((*p).entry_buf).is_null() && pos < len {","highlight_start":5,"highlight_end":49},{"text":"        if csv_increase_buffer(p) != 0 as libc::c_int {","highlight_start":1,"highlight_end":56},{"text":"            (*p).quoted = quoted;","highlight_start":1,"highlight_end":34},{"text":"            (*p).pstate = pstate;","highlight_start":1,"highlight_end":34},{"text":"            (*p).spaces = spaces;","highlight_start":1,"highlight_end":34},{"text":"            (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":40},{"text":"            return pos;","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::collapsible_if)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"collapse nested if block","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":19097,"byte_end":19387,"line_start":524,"line_end":532,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    if ((*p).entry_buf).is_null() && pos < len {","highlight_start":5,"highlight_end":49},{"text":"        if csv_increase_buffer(p) != 0 as libc::c_int {","highlight_start":1,"highlight_end":56},{"text":"            (*p).quoted = quoted;","highlight_start":1,"highlight_end":34},{"text":"            (*p).pstate = pstate;","highlight_start":1,"highlight_end":34},{"text":"            (*p).spaces = spaces;","highlight_start":1,"highlight_end":34},{"text":"            (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":40},{"text":"            return pos;","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"if ((*p).entry_buf).is_null() && pos < len && csv_increase_buffer(p) != 0 as libc::c_int {\n        (*p).quoted = quoted;\n        (*p).pstate = pstate;\n        (*p).spaces = spaces;\n        (*p).entry_pos = entry_pos;\n        return pos;\n    }","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if` statement can be collapsed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:524:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m524\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if ((*p).entry_buf).is_null() && pos < len {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m525\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if csv_increase_buffer(p) != 0 as libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*p).quoted = quoted;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m527\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (*p).pstate = pstate;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m531\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m532\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::collapsible_if)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: collapse nested if block\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m524\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif ((*p).entry_buf).is_null() && pos < len && csv_increase_buffer(p) != 0 as libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m525\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         (*p).quoted = quoted;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         (*p).pstate = pstate;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m527\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         (*p).spaces = spaces;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m528\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         (*p).entry_pos = entry_pos;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m529\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         return pos;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"this `if` statement can be collapsed","code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":19420,"byte_end":19942,"line_start":534,"line_end":548,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        if entry_pos","highlight_start":9,"highlight_end":21},{"text":"            == (if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":73},{"text":"                ((*p).entry_size).wrapping_sub(1 as libc::c_int as size_t)","highlight_start":1,"highlight_end":75},{"text":"            } else {","highlight_start":1,"highlight_end":21},{"text":"                (*p).entry_size","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            if csv_increase_buffer(p) != 0 as libc::c_int {","highlight_start":1,"highlight_end":60},{"text":"                (*p).quoted = quoted;","highlight_start":1,"highlight_end":38},{"text":"                (*p).pstate = pstate;","highlight_start":1,"highlight_end":38},{"text":"                (*p).spaces = spaces;","highlight_start":1,"highlight_end":38},{"text":"                (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":44},{"text":"                return pos;","highlight_start":1,"highlight_end":28},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"collapse nested if block","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":19420,"byte_end":19942,"line_start":534,"line_end":548,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        if entry_pos","highlight_start":9,"highlight_end":21},{"text":"            == (if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":73},{"text":"                ((*p).entry_size).wrapping_sub(1 as libc::c_int as size_t)","highlight_start":1,"highlight_end":75},{"text":"            } else {","highlight_start":1,"highlight_end":21},{"text":"                (*p).entry_size","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            if csv_increase_buffer(p) != 0 as libc::c_int {","highlight_start":1,"highlight_end":60},{"text":"                (*p).quoted = quoted;","highlight_start":1,"highlight_end":38},{"text":"                (*p).pstate = pstate;","highlight_start":1,"highlight_end":38},{"text":"                (*p).spaces = spaces;","highlight_start":1,"highlight_end":38},{"text":"                (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":44},{"text":"                return pos;","highlight_start":1,"highlight_end":28},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"if entry_pos == (if (*p).options as libc::c_int & 8 as libc::c_int != 0 {\n                ((*p).entry_size).wrapping_sub(1 as libc::c_int as size_t)\n            } else {\n                (*p).entry_size\n            }) && csv_increase_buffer(p) != 0 as libc::c_int {\n            (*p).quoted = quoted;\n            (*p).pstate = pstate;\n            (*p).spaces = spaces;\n            (*p).entry_pos = entry_pos;\n            return pos;\n        }","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if` statement can be collapsed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:534:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m534\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if entry_pos\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            == (if (*p).options as libc::c_int & 8 as libc::c_int != 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m536\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ((*p).entry_size).wrapping_sub(1 as libc::c_int as size_t)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m537\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m547\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: collapse nested if block\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m534\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mif entry_pos == (if (*p).options as libc::c_int & 8 as libc::c_int != 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 ((*p).entry_size).wrapping_sub(1 as libc::c_int as size_t)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m536\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m537\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 (*p).entry_size\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m538\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             }) && csv_increase_buffer(p) != 0 as libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m539\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             (*p).quoted = quoted;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m540\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             (*p).pstate = pstate;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m541\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             (*p).spaces = spaces;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             (*p).entry_pos = entry_pos;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             return pos;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m544\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"this `if` statement can be collapsed","code":{"code":"clippy::collapsible_if","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":40437,"byte_end":40630,"line_start":997,"line_end":1001,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        if *csrc as libc::c_int == quote as libc::c_int {","highlight_start":9,"highlight_end":58},{"text":"            if fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {","highlight_start":1,"highlight_end":72},{"text":"                return -(1 as libc::c_int);","highlight_start":1,"highlight_end":44},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"collapse nested if block","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":40437,"byte_end":40630,"line_start":997,"line_end":1001,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        if *csrc as libc::c_int == quote as libc::c_int {","highlight_start":9,"highlight_end":58},{"text":"            if fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {","highlight_start":1,"highlight_end":72},{"text":"                return -(1 as libc::c_int);","highlight_start":1,"highlight_end":44},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"if *csrc as libc::c_int == quote as libc::c_int && fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {\n            return -(1 as libc::c_int);\n        }","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this `if` statement can be collapsed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:997:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m997\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if *csrc as libc::c_int == quote as libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m999\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                return -(1 as libc::c_int);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1000\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1001\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: collapse nested if block\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m997\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mif *csrc as libc::c_int == quote as libc::c_int && fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m998\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+             return -(1 as libc::c_int);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m999\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+         }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":3322,"byte_end":4844,"line_start":95,"line_end":131,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_error(mut p: *const csv_parser) -> libc::c_int {","highlight_start":1,"highlight_end":78},{"text":"    if !p.is_null()","highlight_start":1,"highlight_end":20},{"text":"        && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char).is_null()","highlight_start":1,"highlight_end":90},{"text":"    {} else {","highlight_start":1,"highlight_end":14},{"text":"        __assert_fail(","highlight_start":1,"highlight_end":23},{"text":"            b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":88},{"text":"            b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":87},{"text":"                as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":53},{"text":"            82 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":47},{"text":"            (*::core::mem::transmute::<","highlight_start":1,"highlight_end":40},{"text":"                &[u8; 41],","highlight_start":1,"highlight_end":27},{"text":"                &[libc::c_char; 41],","highlight_start":1,"highlight_end":37},{"text":"            >(b\"int csv_error(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":62},{"text":"                .as_ptr(),","highlight_start":1,"highlight_end":27},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    'c_2142: {","highlight_start":1,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                82 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":51},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 41],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 41],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"int csv_error(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":66},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    return (*p).status;","highlight_start":1,"highlight_end":24},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::missing_safety_doc)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:95:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m95\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_error(mut p: *const csv_parser) -> libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m96\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m97\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char).is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    {} else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).status;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::missing_safety_doc)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":4822,"byte_end":4841,"line_start":130,"line_end":130,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    return (*p).status;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::needless_return)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":4822,"byte_end":4841,"line_start":130,"line_end":130,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    return (*p).status;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"(*p).status","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:130:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).status;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `(*p).status`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_return)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unnecessary operation","code":{"code":"clippy::unnecessary_operation","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":4052,"byte_end":4816,"line_start":111,"line_end":129,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_2142: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                82 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":51},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 41],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 41],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"int csv_error(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":66},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::unnecessary_operation)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"statement can be reduced to","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":4052,"byte_end":4816,"line_start":111,"line_end":129,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_2142: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                82 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":51},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 41],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 41],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"int csv_error(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":66},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":"if !p.is_null()\n            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\n                .is_null()\n        {} else {\n            __assert_fail(\n                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\n                    as *const libc::c_char,\n                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\n                    as *const u8 as *const libc::c_char,\n                82 as libc::c_int as libc::c_uint,\n                (*::core::mem::transmute::<\n                    &[u8; 41],\n                    &[libc::c_char; 41],\n                >(b\"int csv_error(const struct csv_parser *)\\0\"))\n                    .as_ptr(),\n            );\n        };","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary operation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:111:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_2142: {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|______^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::unnecessary_operation)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: statement can be reduced to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m111\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         {} else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             __assert_fail(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const u8 as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 82 as libc::c_int as libc::c_uint,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m121\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 (*::core::mem::transmute::<\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m122\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[u8; 41],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m123\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[libc::c_char; 41],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m124\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 >(b\"int csv_error(const struct csv_parser *)\\0\"))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     .as_ptr(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":4860,"byte_end":5136,"line_start":133,"line_end":139,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_strerror(mut status: libc::c_int) -> *const libc::c_char {","highlight_start":1,"highlight_end":88},{"text":"    if status >= 4 as libc::c_int || status < 0 as libc::c_int {","highlight_start":1,"highlight_end":65},{"text":"        return csv_errors[4 as libc::c_int as usize]","highlight_start":1,"highlight_end":53},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        return csv_errors[status as usize]","highlight_start":1,"highlight_end":43},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:133:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_strerror(mut status: libc::c_int) -> *const libc::c_char {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if status >= 4 as libc::c_int || status < 0 as libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return csv_errors[4 as libc::c_int as usize]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return csv_errors[status as usize]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5023,"byte_end":5067,"line_start":135,"line_end":135,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"        return csv_errors[4 as libc::c_int as usize]","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":5023,"byte_end":5067,"line_start":135,"line_end":135,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"        return csv_errors[4 as libc::c_int as usize]","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":"csv_errors[4 as libc::c_int as usize]","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:135:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m135\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return csv_errors[4 as libc::c_int as usize]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `csv_errors[4 as libc::c_int as usize]`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5091,"byte_end":5125,"line_start":137,"line_end":137,"column_start":9,"column_end":43,"is_primary":true,"text":[{"text":"        return csv_errors[status as usize]","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":5091,"byte_end":5125,"line_start":137,"line_end":137,"column_start":9,"column_end":43,"is_primary":true,"text":[{"text":"        return csv_errors[status as usize]","highlight_start":9,"highlight_end":43}],"label":null,"suggested_replacement":"csv_errors[status as usize]","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:137:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return csv_errors[status as usize]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `csv_errors[status as usize]`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5152,"byte_end":5342,"line_start":141,"line_end":146,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_get_opts(mut p: *const csv_parser) -> libc::c_int {","highlight_start":1,"highlight_end":81},{"text":"    if p.is_null() {","highlight_start":1,"highlight_end":21},{"text":"        return -(1 as libc::c_int);","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    return (*p).options as libc::c_int;","highlight_start":1,"highlight_end":40},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:141:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_get_opts(mut p: *const csv_parser) -> libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if p.is_null() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m143\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return -(1 as libc::c_int);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m144\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).options as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5304,"byte_end":5339,"line_start":145,"line_end":145,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"    return (*p).options as libc::c_int;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":5304,"byte_end":5339,"line_start":145,"line_end":145,"column_start":5,"column_end":40,"is_primary":true,"text":[{"text":"    return (*p).options as libc::c_int;","highlight_start":5,"highlight_end":40}],"label":null,"suggested_replacement":"(*p).options as libc::c_int","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:145:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).options as libc::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `(*p).options as libc::c_int`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5358,"byte_end":5606,"line_start":148,"line_end":157,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_opts(","highlight_start":1,"highlight_end":39},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut options: libc::c_uchar,","highlight_start":1,"highlight_end":32},{"text":") -> libc::c_int {","highlight_start":1,"highlight_end":19},{"text":"    if p.is_null() {","highlight_start":1,"highlight_end":21},{"text":"        return -(1 as libc::c_int);","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    (*p).options = options;","highlight_start":1,"highlight_end":28},{"text":"    return 0 as libc::c_int;","highlight_start":1,"highlight_end":29},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:148:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_opts(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut options: libc::c_uchar,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5579,"byte_end":5603,"line_start":156,"line_end":156,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":5579,"byte_end":5603,"line_start":156,"line_end":156,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":"0 as libc::c_int","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:156:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `0 as libc::c_int`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5622,"byte_end":6720,"line_start":159,"line_end":190,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_init(","highlight_start":1,"highlight_end":35},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut options: libc::c_uchar,","highlight_start":1,"highlight_end":32},{"text":") -> libc::c_int {","highlight_start":1,"highlight_end":19},{"text":"    if p.is_null() {","highlight_start":1,"highlight_end":21},{"text":"        return -(1 as libc::c_int);","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    (*p).entry_buf = 0 as *mut libc::c_uchar;","highlight_start":1,"highlight_end":46},{"text":"    (*p).pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":36},{"text":"    (*p).quoted = 0 as libc::c_int;","highlight_start":1,"highlight_end":36},{"text":"    (*p).spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":46},{"text":"    (*p).entry_pos = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":49},{"text":"    (*p).entry_size = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":50},{"text":"    (*p).status = 0 as libc::c_int;","highlight_start":1,"highlight_end":36},{"text":"    (*p).options = options;","highlight_start":1,"highlight_end":28},{"text":"    (*p).quote_char = 0x22 as libc::c_int as libc::c_uchar;","highlight_start":1,"highlight_end":60},{"text":"    (*p).delim_char = 0x2c as libc::c_int as libc::c_uchar;","highlight_start":1,"highlight_end":60},{"text":"    (*p).is_space = None;","highlight_start":1,"highlight_end":26},{"text":"    (*p).is_term = None;","highlight_start":1,"highlight_end":25},{"text":"    (*p).blk_size = 128 as libc::c_int as size_t;","highlight_start":1,"highlight_end":50},{"text":"    (*p).malloc_func = None;","highlight_start":1,"highlight_end":29},{"text":"    (*p)","highlight_start":1,"highlight_end":9},{"text":"        .realloc_func = Some(","highlight_start":1,"highlight_end":30},{"text":"        realloc","highlight_start":1,"highlight_end":16},{"text":"            as unsafe extern \"C\" fn(","highlight_start":1,"highlight_end":37},{"text":"                *mut libc::c_void,","highlight_start":1,"highlight_end":35},{"text":"                libc::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"            ) -> *mut libc::c_void,","highlight_start":1,"highlight_end":36},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"    (*p).free_func = Some(free as unsafe extern \"C\" fn(*mut libc::c_void) -> ());","highlight_start":1,"highlight_end":82},{"text":"    return 0 as libc::c_int;","highlight_start":1,"highlight_end":29},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:159:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_init(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut options: libc::c_uchar,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":6693,"byte_end":6717,"line_start":189,"line_end":189,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":6693,"byte_end":6717,"line_start":189,"line_end":189,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":"0 as libc::c_int","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:189:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `0 as libc::c_int`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":5827,"byte_end":5850,"line_start":166,"line_end":166,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"    (*p).entry_buf = 0 as *mut libc::c_uchar;","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::zero_ptr)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":5827,"byte_end":5850,"line_start":166,"line_end":166,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"    (*p).entry_buf = 0 as *mut libc::c_uchar;","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_uchar>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:166:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    (*p).entry_buf = 0 as *mut libc::c_uchar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_uchar>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::zero_ptr)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":6736,"byte_end":7131,"line_start":192,"line_end":202,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_free(mut p: *mut csv_parser) {","highlight_start":1,"highlight_end":60},{"text":"    if p.is_null() {","highlight_start":1,"highlight_end":21},{"text":"        return;","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    if !((*p).entry_buf).is_null() && ((*p).free_func).is_some() {","highlight_start":1,"highlight_end":67},{"text":"        ((*p).free_func)","highlight_start":1,"highlight_end":25},{"text":"            .expect(\"non-null function pointer\")((*p).entry_buf as *mut libc::c_void);","highlight_start":1,"highlight_end":87},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    (*p).entry_buf = 0 as *mut libc::c_uchar;","highlight_start":1,"highlight_end":46},{"text":"    (*p).entry_size = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":50},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:192:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_free(mut p: *mut csv_parser) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if p.is_null() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    (*p).entry_size = 0 as libc::c_int as size_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":7053,"byte_end":7076,"line_start":200,"line_end":200,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"    (*p).entry_buf = 0 as *mut libc::c_uchar;","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":7053,"byte_end":7076,"line_start":200,"line_end":200,"column_start":22,"column_end":45,"is_primary":true,"text":[{"text":"    (*p).entry_buf = 0 as *mut libc::c_uchar;","highlight_start":22,"highlight_end":45}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_uchar>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:200:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    (*p).entry_buf = 0 as *mut libc::c_uchar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_uchar>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":7147,"byte_end":10222,"line_start":204,"line_end":284,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_fini(","highlight_start":1,"highlight_end":35},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut cb1: Option::<","highlight_start":1,"highlight_end":23},{"text":"        unsafe extern \"C\" fn(*mut libc::c_void, size_t, *mut libc::c_void) -> (),","highlight_start":1,"highlight_end":82},{"text":"    >,","highlight_start":1,"highlight_end":7},{"text":"    mut cb2: Option::<unsafe extern \"C\" fn(libc::c_int, *mut libc::c_void) -> ()>,","highlight_start":1,"highlight_end":83},{"text":"    mut data: *mut libc::c_void,","highlight_start":1,"highlight_end":33},{"text":") -> libc::c_int {","highlight_start":1,"highlight_end":19},{"text":"    if p.is_null() {","highlight_start":1,"highlight_end":21},{"text":"        return -(1 as libc::c_int);","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    let mut quoted: libc::c_int = (*p).quoted;","highlight_start":1,"highlight_end":47},{"text":"    let mut pstate: libc::c_int = (*p).pstate;","highlight_start":1,"highlight_end":47},{"text":"    let mut spaces: size_t = (*p).spaces;","highlight_start":1,"highlight_end":42},{"text":"    let mut entry_pos: size_t = (*p).entry_pos;","highlight_start":1,"highlight_end":48},{"text":"    if pstate == 2 as libc::c_int && (*p).quoted != 0","highlight_start":1,"highlight_end":54},{"text":"        && (*p).options as libc::c_int & 1 as libc::c_int != 0","highlight_start":1,"highlight_end":63},{"text":"        && (*p).options as libc::c_int & 4 as libc::c_int != 0","highlight_start":1,"highlight_end":63},{"text":"    {","highlight_start":1,"highlight_end":6},{"text":"        (*p).status = 1 as libc::c_int;","highlight_start":1,"highlight_end":40},{"text":"        return -(1 as libc::c_int);","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    let mut current_block_26: u64;","highlight_start":1,"highlight_end":35},{"text":"    match pstate {","highlight_start":1,"highlight_end":19},{"text":"        3 => {","highlight_start":1,"highlight_end":15},{"text":"            (*p)","highlight_start":1,"highlight_end":17},{"text":"                .entry_pos = ((*p).entry_pos)","highlight_start":1,"highlight_end":46},{"text":"                .wrapping_sub(((*p).spaces).wrapping_add(1 as libc::c_int as size_t));","highlight_start":1,"highlight_end":87},{"text":"            entry_pos = (*p).entry_pos;","highlight_start":1,"highlight_end":40},{"text":"            current_block_26 = 15225788259906368840;","highlight_start":1,"highlight_end":53},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        1 | 2 => {","highlight_start":1,"highlight_end":19},{"text":"            current_block_26 = 15225788259906368840;","highlight_start":1,"highlight_end":53},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        0 | _ => {","highlight_start":1,"highlight_end":19},{"text":"            current_block_26 = 15768484401365413375;","highlight_start":1,"highlight_end":53},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    match current_block_26 {","highlight_start":1,"highlight_end":29},{"text":"        15225788259906368840 => {","highlight_start":1,"highlight_end":34},{"text":"            if quoted == 0 {","highlight_start":1,"highlight_end":29},{"text":"                entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":60},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":69},{"text":"                *((*p).entry_buf)","highlight_start":1,"highlight_end":34},{"text":"                    .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":80},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            if cb1.is_some() && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":85},{"text":"                && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":74},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                cb1","highlight_start":1,"highlight_end":20},{"text":"                    .expect(","highlight_start":1,"highlight_end":29},{"text":"                        \"non-null function pointer\",","highlight_start":1,"highlight_end":53},{"text":"                    )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":64},{"text":"            } else if cb1.is_some() {","highlight_start":1,"highlight_end":38},{"text":"                cb1","highlight_start":1,"highlight_end":20},{"text":"                    .expect(","highlight_start":1,"highlight_end":29},{"text":"                        \"non-null function pointer\",","highlight_start":1,"highlight_end":53},{"text":"                    )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":39},{"text":"            spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":49},{"text":"            quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":44},{"text":"            entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":42},{"text":"            if cb2.is_some() {","highlight_start":1,"highlight_end":31},{"text":"                cb2.expect(\"non-null function pointer\")(-(1 as libc::c_int), data);","highlight_start":1,"highlight_end":84},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":39},{"text":"            spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":49},{"text":"            quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":44},{"text":"            entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":42},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        _ => {}","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    (*p).status = 0 as libc::c_int;","highlight_start":1,"highlight_end":36},{"text":"    (*p).entry_pos = (*p).status as size_t;","highlight_start":1,"highlight_end":44},{"text":"    (*p).quoted = (*p).entry_pos as libc::c_int;","highlight_start":1,"highlight_end":49},{"text":"    (*p).spaces = (*p).quoted as size_t;","highlight_start":1,"highlight_end":41},{"text":"    (*p).pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":36},{"text":"    return 0 as libc::c_int;","highlight_start":1,"highlight_end":29},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:204:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_fini(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut cb1: Option::<\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafe extern \"C\" fn(*mut libc::c_void, size_t, *mut libc::c_void) -> (),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"called `expect` on `cb1` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":8889,"byte_end":8902,"line_start":251,"line_end":251,"column_start":16,"column_end":29,"is_primary":false,"text":[{"text":"            if cb1.is_some() && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":16,"highlight_end":29}],"label":"the check is happening here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/libcsv.rs","byte_start":9066,"byte_end":9176,"line_start":254,"line_end":257,"column_start":17,"column_end":22,"is_primary":true,"text":[{"text":"                cb1","highlight_start":17,"highlight_end":20},{"text":"                    .expect(","highlight_start":1,"highlight_end":29},{"text":"                        \"non-null function pointer\",","highlight_start":1,"highlight_end":53},{"text":"                    )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::unnecessary_unwrap)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try using `if let` or `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb1` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:254:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            if cb1.is_some() && (*p).options as libc::c_int & 16 as libc::c_int != 0\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe check is happening here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::unnecessary_unwrap)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try using `if let` or `match`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb2` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":9683,"byte_end":9722,"line_start":269,"line_end":269,"column_start":17,"column_end":56,"is_primary":true,"text":[{"text":"                cb2.expect(\"non-null function pointer\")(-(1 as libc::c_int), data);","highlight_start":17,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":9647,"byte_end":9663,"line_start":268,"line_end":268,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"            if cb2.is_some() {","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":"if let Some(..) = cb2","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb2` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:269:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if cb2.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = cb2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                cb2.expect(\"non-null function pointer\")(-(1 as libc::c_int), data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":10195,"byte_end":10219,"line_start":283,"line_end":283,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":10195,"byte_end":10219,"line_start":283,"line_end":283,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":"0 as libc::c_int","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:283:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `0 as libc::c_int`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"wildcard pattern covers any other pattern as it will match anyway","code":{"code":"clippy::wildcard_in_or_patterns","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":8418,"byte_end":8423,"line_start":238,"line_end":238,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        0 | _ => {","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::wildcard_in_or_patterns)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider handling `_` separately","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: wildcard pattern covers any other pattern as it will match anyway\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:238:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        0 | _ => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::wildcard_in_or_patterns)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider handling `_` separately\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_in_or_patterns\u001b[0m\n\n"}
{"message":"you seem to be trying to use `match` for an equality check. Consider using `if`","code":{"code":"clippy::single_match","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":8506,"byte_end":9978,"line_start":242,"line_end":277,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    match current_block_26 {","highlight_start":5,"highlight_end":29},{"text":"        15225788259906368840 => {","highlight_start":1,"highlight_end":34},{"text":"            if quoted == 0 {","highlight_start":1,"highlight_end":29},{"text":"                entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":60},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":69},{"text":"                *((*p).entry_buf)","highlight_start":1,"highlight_end":34},{"text":"                    .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":80},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            if cb1.is_some() && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":85},{"text":"                && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":74},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                cb1","highlight_start":1,"highlight_end":20},{"text":"                    .expect(","highlight_start":1,"highlight_end":29},{"text":"                        \"non-null function pointer\",","highlight_start":1,"highlight_end":53},{"text":"                    )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":64},{"text":"            } else if cb1.is_some() {","highlight_start":1,"highlight_end":38},{"text":"                cb1","highlight_start":1,"highlight_end":20},{"text":"                    .expect(","highlight_start":1,"highlight_end":29},{"text":"                        \"non-null function pointer\",","highlight_start":1,"highlight_end":53},{"text":"                    )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":39},{"text":"            spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":49},{"text":"            quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":44},{"text":"            entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":42},{"text":"            if cb2.is_some() {","highlight_start":1,"highlight_end":31},{"text":"                cb2.expect(\"non-null function pointer\")(-(1 as libc::c_int), data);","highlight_start":1,"highlight_end":84},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":39},{"text":"            spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":49},{"text":"            quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":44},{"text":"            entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":42},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        _ => {}","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::single_match)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try this","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":8506,"byte_end":9978,"line_start":242,"line_end":277,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    match current_block_26 {","highlight_start":5,"highlight_end":29},{"text":"        15225788259906368840 => {","highlight_start":1,"highlight_end":34},{"text":"            if quoted == 0 {","highlight_start":1,"highlight_end":29},{"text":"                entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":60},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":69},{"text":"                *((*p).entry_buf)","highlight_start":1,"highlight_end":34},{"text":"                    .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":80},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            if cb1.is_some() && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":85},{"text":"                && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":74},{"text":"            {","highlight_start":1,"highlight_end":14},{"text":"                cb1","highlight_start":1,"highlight_end":20},{"text":"                    .expect(","highlight_start":1,"highlight_end":29},{"text":"                        \"non-null function pointer\",","highlight_start":1,"highlight_end":53},{"text":"                    )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":64},{"text":"            } else if cb1.is_some() {","highlight_start":1,"highlight_end":38},{"text":"                cb1","highlight_start":1,"highlight_end":20},{"text":"                    .expect(","highlight_start":1,"highlight_end":29},{"text":"                        \"non-null function pointer\",","highlight_start":1,"highlight_end":53},{"text":"                    )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":39},{"text":"            spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":49},{"text":"            quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":44},{"text":"            entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":42},{"text":"            if cb2.is_some() {","highlight_start":1,"highlight_end":31},{"text":"                cb2.expect(\"non-null function pointer\")(-(1 as libc::c_int), data);","highlight_start":1,"highlight_end":84},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":39},{"text":"            spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":49},{"text":"            quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":44},{"text":"            entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":42},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        _ => {}","highlight_start":1,"highlight_end":16},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"if current_block_26 == 15225788259906368840 {\n        if quoted == 0 {\n            entry_pos = entry_pos.wrapping_sub(spaces);\n        }\n        if (*p).options as libc::c_int & 8 as libc::c_int != 0 {\n            *((*p).entry_buf)\n                .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;\n        }\n        if cb1.is_some() && (*p).options as libc::c_int & 16 as libc::c_int != 0\n            && quoted == 0 && entry_pos == 0 as libc::c_int as size_t\n        {\n            cb1\n                .expect(\n                    \"non-null function pointer\",\n                )(0 as *mut libc::c_void, entry_pos, data);\n        } else if cb1.is_some() {\n            cb1\n                .expect(\n                    \"non-null function pointer\",\n                )((*p).entry_buf as *mut libc::c_void, entry_pos, data);\n        }\n        pstate = 1 as libc::c_int;\n        spaces = 0 as libc::c_int as size_t;\n        quoted = spaces as libc::c_int;\n        entry_pos = quoted as size_t;\n        if cb2.is_some() {\n            cb2.expect(\"non-null function pointer\")(-(1 as libc::c_int), data);\n        }\n        pstate = 0 as libc::c_int;\n        spaces = 0 as libc::c_int as size_t;\n        quoted = spaces as libc::c_int;\n        entry_pos = quoted as size_t;\n    }","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: you seem to be trying to use `match` for an equality check. Consider using `if`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:242:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match current_block_26 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        15225788259906368840 => {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if quoted == 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                entry_pos = entry_pos.wrapping_sub(spaces);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m276\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        _ => {}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::single_match)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try this\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif current_block_26 == 15225788259906368840 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         if quoted == 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             entry_pos = entry_pos.wrapping_sub(spaces);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         if (*p).options as libc::c_int & 8 as libc::c_int != 0 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             *((*p).entry_buf)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m249\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         if cb1.is_some() && (*p).options as libc::c_int & 16 as libc::c_int != 0\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             && quoted == 0 && entry_pos == 0 as libc::c_int as size_t\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m253\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         } else if cb1.is_some() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 )((*p).entry_buf as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         pstate = 1 as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         spaces = 0 as libc::c_int as size_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         quoted = spaces as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         entry_pos = quoted as size_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         if cb2.is_some() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             cb2.expect(\"non-null function pointer\")(-(1 as libc::c_int), data);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         pstate = 0 as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         spaces = 0 as libc::c_int as size_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         quoted = spaces as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         entry_pos = quoted as size_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":9177,"byte_end":9199,"line_start":257,"line_end":257,"column_start":23,"column_end":45,"is_primary":true,"text":[{"text":"                    )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":23,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":9177,"byte_end":9199,"line_start":257,"line_end":257,"column_start":23,"column_end":45,"is_primary":true,"text":[{"text":"                    )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":23,"highlight_end":45}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:257:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":10238,"byte_end":10387,"line_start":286,"line_end":290,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_delim(mut p: *mut csv_parser, mut c: libc::c_uchar) {","highlight_start":1,"highlight_end":87},{"text":"    if !p.is_null() {","highlight_start":1,"highlight_end":22},{"text":"        (*p).delim_char = c;","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:286:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_delim(mut p: *mut csv_parser, mut c: libc::c_uchar) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m287\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !p.is_null() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (*p).delim_char = c;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m290\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":10403,"byte_end":10552,"line_start":292,"line_end":296,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_quote(mut p: *mut csv_parser, mut c: libc::c_uchar) {","highlight_start":1,"highlight_end":87},{"text":"    if !p.is_null() {","highlight_start":1,"highlight_end":22},{"text":"        (*p).quote_char = c;","highlight_start":1,"highlight_end":29},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:292:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_quote(mut p: *mut csv_parser, mut c: libc::c_uchar) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !p.is_null() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (*p).quote_char = c;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m295\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":10568,"byte_end":12130,"line_start":298,"line_end":334,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_get_delim(mut p: *const csv_parser) -> libc::c_uchar {","highlight_start":1,"highlight_end":84},{"text":"    if !p.is_null()","highlight_start":1,"highlight_end":20},{"text":"        && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char).is_null()","highlight_start":1,"highlight_end":90},{"text":"    {} else {","highlight_start":1,"highlight_end":14},{"text":"        __assert_fail(","highlight_start":1,"highlight_end":23},{"text":"            b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":88},{"text":"            b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":87},{"text":"                as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":53},{"text":"            222 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":48},{"text":"            (*::core::mem::transmute::<","highlight_start":1,"highlight_end":40},{"text":"                &[u8; 55],","highlight_start":1,"highlight_end":27},{"text":"                &[libc::c_char; 55],","highlight_start":1,"highlight_end":37},{"text":"            >(b\"unsigned char csv_get_delim(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":76},{"text":"                .as_ptr(),","highlight_start":1,"highlight_end":27},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    'c_4379: {","highlight_start":1,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                222 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 55],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 55],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"unsigned char csv_get_delim(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":80},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    return (*p).delim_char;","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:298:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_get_delim(mut p: *const csv_parser) -> libc::c_uchar {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char).is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    {} else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).delim_char;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":12104,"byte_end":12127,"line_start":333,"line_end":333,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"    return (*p).delim_char;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":12104,"byte_end":12127,"line_start":333,"line_end":333,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"    return (*p).delim_char;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":"(*p).delim_char","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:333:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m333\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).delim_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `(*p).delim_char`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unnecessary operation","code":{"code":"clippy::unnecessary_operation","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":11319,"byte_end":12098,"line_start":314,"line_end":332,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_4379: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                222 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 55],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 55],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"unsigned char csv_get_delim(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":80},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"statement can be reduced to","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":11319,"byte_end":12098,"line_start":314,"line_end":332,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_4379: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                222 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 55],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 55],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"unsigned char csv_get_delim(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":80},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":"if !p.is_null()\n            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\n                .is_null()\n        {} else {\n            __assert_fail(\n                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\n                    as *const libc::c_char,\n                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\n                    as *const u8 as *const libc::c_char,\n                222 as libc::c_int as libc::c_uint,\n                (*::core::mem::transmute::<\n                    &[u8; 55],\n                    &[libc::c_char; 55],\n                >(b\"unsigned char csv_get_delim(const struct csv_parser *)\\0\"))\n                    .as_ptr(),\n            );\n        };","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary operation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:314:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_4379: {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|______^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: statement can be reduced to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         {} else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             __assert_fail(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const u8 as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m323\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 222 as libc::c_int as libc::c_uint,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 (*::core::mem::transmute::<\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[u8; 55],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m326\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[libc::c_char; 55],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 >(b\"unsigned char csv_get_delim(const struct csv_parser *)\\0\"))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m328\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     .as_ptr(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":12146,"byte_end":13708,"line_start":336,"line_end":372,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_get_quote(mut p: *const csv_parser) -> libc::c_uchar {","highlight_start":1,"highlight_end":84},{"text":"    if !p.is_null()","highlight_start":1,"highlight_end":20},{"text":"        && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char).is_null()","highlight_start":1,"highlight_end":90},{"text":"    {} else {","highlight_start":1,"highlight_end":14},{"text":"        __assert_fail(","highlight_start":1,"highlight_end":23},{"text":"            b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":88},{"text":"            b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":87},{"text":"                as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":53},{"text":"            231 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":48},{"text":"            (*::core::mem::transmute::<","highlight_start":1,"highlight_end":40},{"text":"                &[u8; 55],","highlight_start":1,"highlight_end":27},{"text":"                &[libc::c_char; 55],","highlight_start":1,"highlight_end":37},{"text":"            >(b\"unsigned char csv_get_quote(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":76},{"text":"                .as_ptr(),","highlight_start":1,"highlight_end":27},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    'c_4427: {","highlight_start":1,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                231 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 55],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 55],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"unsigned char csv_get_quote(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":80},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    return (*p).quote_char;","highlight_start":1,"highlight_end":28},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:336:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_get_quote(mut p: *const csv_parser) -> libc::c_uchar {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char).is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    {} else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).quote_char;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":13682,"byte_end":13705,"line_start":371,"line_end":371,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"    return (*p).quote_char;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":13682,"byte_end":13705,"line_start":371,"line_end":371,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"    return (*p).quote_char;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":"(*p).quote_char","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:371:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (*p).quote_char;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `(*p).quote_char`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unnecessary operation","code":{"code":"clippy::unnecessary_operation","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":12897,"byte_end":13676,"line_start":352,"line_end":370,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_4427: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                231 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 55],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 55],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"unsigned char csv_get_quote(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":80},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"statement can be reduced to","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":12897,"byte_end":13676,"line_start":352,"line_end":370,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_4427: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                231 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 55],","highlight_start":1,"highlight_end":31},{"text":"                    &[libc::c_char; 55],","highlight_start":1,"highlight_end":41},{"text":"                >(b\"unsigned char csv_get_quote(const struct csv_parser *)\\0\"))","highlight_start":1,"highlight_end":80},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":"if !p.is_null()\n            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\n                .is_null()\n        {} else {\n            __assert_fail(\n                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\n                    as *const libc::c_char,\n                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\n                    as *const u8 as *const libc::c_char,\n                231 as libc::c_int as libc::c_uint,\n                (*::core::mem::transmute::<\n                    &[u8; 55],\n                    &[libc::c_char; 55],\n                >(b\"unsigned char csv_get_quote(const struct csv_parser *)\\0\"))\n                    .as_ptr(),\n            );\n        };","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary operation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:352:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_4427: {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m370\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|______^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: statement can be reduced to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m352\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         {} else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             __assert_fail(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m359\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m360\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const u8 as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m361\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 231 as libc::c_int as libc::c_uint,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 (*::core::mem::transmute::<\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m363\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[u8; 55],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m364\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[libc::c_char; 55],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 >(b\"unsigned char csv_get_quote(const struct csv_parser *)\\0\"))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m366\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     .as_ptr(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m368\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":13724,"byte_end":13937,"line_start":374,"line_end":381,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_space_func(","highlight_start":1,"highlight_end":45},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut f: Option::<unsafe extern \"C\" fn(libc::c_uchar) -> libc::c_int>,","highlight_start":1,"highlight_end":73},{"text":") {","highlight_start":1,"highlight_end":4},{"text":"    if !p.is_null() {","highlight_start":1,"highlight_end":22},{"text":"        (*p).is_space = f;","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:374:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_space_func(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut f: Option::<unsafe extern \"C\" fn(libc::c_uchar) -> libc::c_int>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m377\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m380\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m381\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":13953,"byte_end":14164,"line_start":383,"line_end":390,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_term_func(","highlight_start":1,"highlight_end":44},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut f: Option::<unsafe extern \"C\" fn(libc::c_uchar) -> libc::c_int>,","highlight_start":1,"highlight_end":73},{"text":") {","highlight_start":1,"highlight_end":4},{"text":"    if !p.is_null() {","highlight_start":1,"highlight_end":22},{"text":"        (*p).is_term = f;","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:383:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_term_func(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m384\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m385\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut f: Option::<unsafe extern \"C\" fn(libc::c_uchar) -> libc::c_int>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m386\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m389\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m390\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":14180,"byte_end":14432,"line_start":392,"line_end":399,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_realloc_func(","highlight_start":1,"highlight_end":47},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut f: Option::<unsafe extern \"C\" fn(*mut libc::c_void, size_t) -> *mut libc::c_void>,","highlight_start":1,"highlight_end":91},{"text":") {","highlight_start":1,"highlight_end":4},{"text":"    if !p.is_null() && f.is_some() {","highlight_start":1,"highlight_end":37},{"text":"        (*p).realloc_func = f;","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:392:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_realloc_func(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut f: Option::<unsafe extern \"C\" fn(*mut libc::c_void, size_t) -> *mut libc::c_void>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m398\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":14448,"byte_end":14671,"line_start":401,"line_end":408,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_free_func(","highlight_start":1,"highlight_end":44},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut f: Option::<unsafe extern \"C\" fn(*mut libc::c_void) -> ()>,","highlight_start":1,"highlight_end":68},{"text":") {","highlight_start":1,"highlight_end":4},{"text":"    if !p.is_null() && f.is_some() {","highlight_start":1,"highlight_end":37},{"text":"        (*p).free_func = f;","highlight_start":1,"highlight_end":28},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:401:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_free_func(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut f: Option::<unsafe extern \"C\" fn(*mut libc::c_void) -> ()>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":14687,"byte_end":14836,"line_start":410,"line_end":414,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_set_blk_size(mut p: *mut csv_parser, mut size: size_t) {","highlight_start":1,"highlight_end":86},{"text":"    if !p.is_null() {","highlight_start":1,"highlight_end":22},{"text":"        (*p).blk_size = size;","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:410:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_set_blk_size(mut p: *mut csv_parser, mut size: size_t) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !p.is_null() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (*p).blk_size = size;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":14852,"byte_end":15040,"line_start":416,"line_end":421,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_get_buffer_size(mut p: *const csv_parser) -> size_t {","highlight_start":1,"highlight_end":83},{"text":"    if !p.is_null() {","highlight_start":1,"highlight_end":22},{"text":"        return (*p).entry_size;","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    return 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":39},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:416:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_get_buffer_size(mut p: *const csv_parser) -> size_t {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if !p.is_null() {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return (*p).entry_size;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int as size_t;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m421\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":15003,"byte_end":15037,"line_start":420,"line_end":420,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int as size_t;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":15003,"byte_end":15037,"line_start":420,"line_end":420,"column_start":5,"column_end":39,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int as size_t;","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":"0 as libc::c_int as size_t","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:420:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int as size_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `0 as libc::c_int as size_t`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":16272,"byte_end":16296,"line_start":457,"line_end":457,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":16272,"byte_end":16296,"line_start":457,"line_end":457,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":"0 as libc::c_int","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:457:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m457\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `0 as libc::c_int`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":15350,"byte_end":15372,"line_start":430,"line_end":430,"column_start":37,"column_end":59,"is_primary":true,"text":[{"text":"    let mut vp: *mut libc::c_void = 0 as *mut libc::c_void;","highlight_start":37,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":15350,"byte_end":15372,"line_start":430,"line_end":430,"column_start":37,"column_end":59,"is_primary":true,"text":[{"text":"    let mut vp: *mut libc::c_void = 0 as *mut libc::c_void;","highlight_start":37,"highlight_end":59}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:430:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut vp: *mut libc::c_void = 0 as *mut libc::c_void;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"manual implementation of an assign operation","code":{"code":"clippy::assign_op_pattern","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":15980,"byte_end":16024,"line_start":449,"line_end":449,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"        to_add = to_add / 2 as libc::c_int as size_t;","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::assign_op_pattern)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"replace it with","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":15980,"byte_end":16024,"line_start":449,"line_end":449,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"        to_add = to_add / 2 as libc::c_int as size_t;","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":"to_add /= 2 as libc::c_int as size_t","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual implementation of an assign operation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:449:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        to_add = to_add / 2 as libc::c_int as size_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: replace it with: `to_add /= 2 as libc::c_int as size_t`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::assign_op_pattern)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":16315,"byte_end":37581,"line_start":460,"line_end":899,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_parse(","highlight_start":1,"highlight_end":36},{"text":"    mut p: *mut csv_parser,","highlight_start":1,"highlight_end":28},{"text":"    mut s: *const libc::c_void,","highlight_start":1,"highlight_end":32},{"text":"    mut len: size_t,","highlight_start":1,"highlight_end":21},{"text":"    mut cb1: Option::<","highlight_start":1,"highlight_end":23},{"text":"        unsafe extern \"C\" fn(*mut libc::c_void, size_t, *mut libc::c_void) -> (),","highlight_start":1,"highlight_end":82},{"text":"    >,","highlight_start":1,"highlight_end":7},{"text":"    mut cb2: Option::<unsafe extern \"C\" fn(libc::c_int, *mut libc::c_void) -> ()>,","highlight_start":1,"highlight_end":83},{"text":"    mut data: *mut libc::c_void,","highlight_start":1,"highlight_end":33},{"text":") -> size_t {","highlight_start":1,"highlight_end":14},{"text":"    if !p.is_null()","highlight_start":1,"highlight_end":20},{"text":"        && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char).is_null()","highlight_start":1,"highlight_end":90},{"text":"    {} else {","highlight_start":1,"highlight_end":14},{"text":"        __assert_fail(","highlight_start":1,"highlight_end":23},{"text":"            b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":88},{"text":"            b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":87},{"text":"                as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":53},{"text":"            321 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":48},{"text":"            (*::core::mem::transmute::<","highlight_start":1,"highlight_end":40},{"text":"                &[u8; 125],","highlight_start":1,"highlight_end":28},{"text":"                &[libc::c_char; 125],","highlight_start":1,"highlight_end":38},{"text":"            >(","highlight_start":1,"highlight_end":15},{"text":"                b\"size_t csv_parse(struct csv_parser *, const void *, size_t, void (*)(void *, size_t, void *), void (*)(int, void *), void *)\\0\",","highlight_start":1,"highlight_end":147},{"text":"            ))","highlight_start":1,"highlight_end":15},{"text":"                .as_ptr(),","highlight_start":1,"highlight_end":27},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    'c_3937: {","highlight_start":1,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                321 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 125],","highlight_start":1,"highlight_end":32},{"text":"                    &[libc::c_char; 125],","highlight_start":1,"highlight_end":42},{"text":"                >(","highlight_start":1,"highlight_end":19},{"text":"                    b\"size_t csv_parse(struct csv_parser *, const void *, size_t, void (*)(void *, size_t, void *), void (*)(int, void *), void *)\\0\",","highlight_start":1,"highlight_end":151},{"text":"                ))","highlight_start":1,"highlight_end":19},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    if s.is_null() {","highlight_start":1,"highlight_end":21},{"text":"        return 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    let mut us: *const libc::c_uchar = s as *const libc::c_uchar;","highlight_start":1,"highlight_end":66},{"text":"    let mut c: libc::c_uchar = 0;","highlight_start":1,"highlight_end":34},{"text":"    let mut pos: size_t = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":54},{"text":"    let mut delim: libc::c_uchar = (*p).delim_char;","highlight_start":1,"highlight_end":52},{"text":"    let mut quote: libc::c_uchar = (*p).quote_char;","highlight_start":1,"highlight_end":52},{"text":"    let mut is_space: Option::<unsafe extern \"C\" fn(libc::c_uchar) -> libc::c_int> = (*p)","highlight_start":1,"highlight_end":90},{"text":"        .is_space;","highlight_start":1,"highlight_end":19},{"text":"    let mut is_term: Option::<unsafe extern \"C\" fn(libc::c_uchar) -> libc::c_int> = (*p)","highlight_start":1,"highlight_end":89},{"text":"        .is_term;","highlight_start":1,"highlight_end":18},{"text":"    let mut quoted: libc::c_int = (*p).quoted;","highlight_start":1,"highlight_end":47},{"text":"    let mut pstate: libc::c_int = (*p).pstate;","highlight_start":1,"highlight_end":47},{"text":"    let mut spaces: size_t = (*p).spaces;","highlight_start":1,"highlight_end":42},{"text":"    let mut entry_pos: size_t = (*p).entry_pos;","highlight_start":1,"highlight_end":48},{"text":"    if ((*p).entry_buf).is_null() && pos < len {","highlight_start":1,"highlight_end":49},{"text":"        if csv_increase_buffer(p) != 0 as libc::c_int {","highlight_start":1,"highlight_end":56},{"text":"            (*p).quoted = quoted;","highlight_start":1,"highlight_end":34},{"text":"            (*p).pstate = pstate;","highlight_start":1,"highlight_end":34},{"text":"            (*p).spaces = spaces;","highlight_start":1,"highlight_end":34},{"text":"            (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":40},{"text":"            return pos;","highlight_start":1,"highlight_end":24},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    while pos < len {","highlight_start":1,"highlight_end":22},{"text":"        if entry_pos","highlight_start":1,"highlight_end":21},{"text":"            == (if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":73},{"text":"                ((*p).entry_size).wrapping_sub(1 as libc::c_int as size_t)","highlight_start":1,"highlight_end":75},{"text":"            } else {","highlight_start":1,"highlight_end":21},{"text":"                (*p).entry_size","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        {","highlight_start":1,"highlight_end":10},{"text":"            if csv_increase_buffer(p) != 0 as libc::c_int {","highlight_start":1,"highlight_end":60},{"text":"                (*p).quoted = quoted;","highlight_start":1,"highlight_end":38},{"text":"                (*p).pstate = pstate;","highlight_start":1,"highlight_end":38},{"text":"                (*p).spaces = spaces;","highlight_start":1,"highlight_end":38},{"text":"                (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":44},{"text":"                return pos;","highlight_start":1,"highlight_end":28},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        let fresh0 = pos;","highlight_start":1,"highlight_end":26},{"text":"        pos = pos.wrapping_add(1);","highlight_start":1,"highlight_end":35},{"text":"        c = *us.offset(fresh0 as isize);","highlight_start":1,"highlight_end":41},{"text":"        match pstate {","highlight_start":1,"highlight_end":23},{"text":"            0 | 1 => {","highlight_start":1,"highlight_end":23},{"text":"                if (if is_space.is_some() {","highlight_start":1,"highlight_end":44},{"text":"                    is_space.expect(\"non-null function pointer\")(c)","highlight_start":1,"highlight_end":68},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    (c as libc::c_int == 0x20 as libc::c_int","highlight_start":1,"highlight_end":61},{"text":"                        || c as libc::c_int == 0x9 as libc::c_int) as libc::c_int","highlight_start":1,"highlight_end":82},{"text":"                }) != 0 && c as libc::c_int != delim as libc::c_int","highlight_start":1,"highlight_end":68},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    continue;","highlight_start":1,"highlight_end":30},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                if if is_term.is_some() {","highlight_start":1,"highlight_end":42},{"text":"                    is_term.expect(\"non-null function pointer\")(c)","highlight_start":1,"highlight_end":67},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    (c as libc::c_int == 0xd as libc::c_int","highlight_start":1,"highlight_end":60},{"text":"                        || c as libc::c_int == 0xa as libc::c_int) as libc::c_int","highlight_start":1,"highlight_end":82},{"text":"                } != 0","highlight_start":1,"highlight_end":23},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    if pstate == 1 as libc::c_int {","highlight_start":1,"highlight_end":52},{"text":"                        if quoted == 0 {","highlight_start":1,"highlight_end":41},{"text":"                            entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":72},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":81},{"text":"                            *((*p).entry_buf)","highlight_start":1,"highlight_end":46},{"text":"                                .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":92},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        if cb1.is_some()","highlight_start":1,"highlight_end":41},{"text":"                            && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":84},{"text":"                            && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":86},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            cb1","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":76},{"text":"                        } else if cb1.is_some() {","highlight_start":1,"highlight_end":50},{"text":"                            cb1","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":89},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                        quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":56},{"text":"                        entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":54},{"text":"                        if cb2.is_some() {","highlight_start":1,"highlight_end":43},{"text":"                            cb2","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(c as libc::c_int, data);","highlight_start":1,"highlight_end":59},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                        quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":56},{"text":"                        entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":54},{"text":"                    } else if (*p).options as libc::c_int & 2 as libc::c_int != 0 {","highlight_start":1,"highlight_end":84},{"text":"                        if cb2.is_some() {","highlight_start":1,"highlight_end":43},{"text":"                            cb2","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(c as libc::c_int, data);","highlight_start":1,"highlight_end":59},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                        quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":56},{"text":"                        entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":54},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else if c as libc::c_int == delim as libc::c_int {","highlight_start":1,"highlight_end":69},{"text":"                    if quoted == 0 {","highlight_start":1,"highlight_end":37},{"text":"                        entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":68},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":77},{"text":"                        *((*p).entry_buf)","highlight_start":1,"highlight_end":42},{"text":"                            .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":88},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    if cb1.is_some()","highlight_start":1,"highlight_end":37},{"text":"                        && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":80},{"text":"                        && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":82},{"text":"                    {","highlight_start":1,"highlight_end":22},{"text":"                        cb1","highlight_start":1,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":72},{"text":"                    } else if cb1.is_some() {","highlight_start":1,"highlight_end":46},{"text":"                        cb1","highlight_start":1,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":85},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":57},{"text":"                    quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":52},{"text":"                    entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":50},{"text":"                } else if c as libc::c_int == quote as libc::c_int {","highlight_start":1,"highlight_end":69},{"text":"                    pstate = 2 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    quoted = 1 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    pstate = 2 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    quoted = 0 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    let fresh1 = entry_pos;","highlight_start":1,"highlight_end":44},{"text":"                    entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":59},{"text":"                    *((*p).entry_buf).offset(fresh1 as isize) = c;","highlight_start":1,"highlight_end":67},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            2 => {","highlight_start":1,"highlight_end":19},{"text":"                if c as libc::c_int == quote as libc::c_int {","highlight_start":1,"highlight_end":62},{"text":"                    if quoted != 0 {","highlight_start":1,"highlight_end":37},{"text":"                        let fresh2 = entry_pos;","highlight_start":1,"highlight_end":48},{"text":"                        entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":63},{"text":"                        *((*p).entry_buf).offset(fresh2 as isize) = c;","highlight_start":1,"highlight_end":71},{"text":"                        pstate = 3 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                    } else {","highlight_start":1,"highlight_end":29},{"text":"                        if (*p).options as libc::c_int & 1 as libc::c_int != 0 {","highlight_start":1,"highlight_end":81},{"text":"                            (*p).status = 1 as libc::c_int;","highlight_start":1,"highlight_end":60},{"text":"                            (*p).quoted = quoted;","highlight_start":1,"highlight_end":50},{"text":"                            (*p).pstate = pstate;","highlight_start":1,"highlight_end":50},{"text":"                            (*p).spaces = spaces;","highlight_start":1,"highlight_end":50},{"text":"                            (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":56},{"text":"                            return pos.wrapping_sub(1 as libc::c_int as size_t);","highlight_start":1,"highlight_end":81},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        let fresh3 = entry_pos;","highlight_start":1,"highlight_end":48},{"text":"                        entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":63},{"text":"                        *((*p).entry_buf).offset(fresh3 as isize) = c;","highlight_start":1,"highlight_end":71},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else if c as libc::c_int == delim as libc::c_int {","highlight_start":1,"highlight_end":69},{"text":"                    if quoted != 0 {","highlight_start":1,"highlight_end":37},{"text":"                        let fresh4 = entry_pos;","highlight_start":1,"highlight_end":48},{"text":"                        entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":63},{"text":"                        *((*p).entry_buf).offset(fresh4 as isize) = c;","highlight_start":1,"highlight_end":71},{"text":"                    } else {","highlight_start":1,"highlight_end":29},{"text":"                        if quoted == 0 {","highlight_start":1,"highlight_end":41},{"text":"                            entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":72},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":81},{"text":"                            *((*p).entry_buf)","highlight_start":1,"highlight_end":46},{"text":"                                .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":92},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        if cb1.is_some()","highlight_start":1,"highlight_end":41},{"text":"                            && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":84},{"text":"                            && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":86},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            cb1","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":76},{"text":"                        } else if cb1.is_some() {","highlight_start":1,"highlight_end":50},{"text":"                            cb1","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":89},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                        quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":56},{"text":"                        entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":54},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else if if is_term.is_some() {","highlight_start":1,"highlight_end":49},{"text":"                    is_term.expect(\"non-null function pointer\")(c)","highlight_start":1,"highlight_end":67},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    (c as libc::c_int == 0xd as libc::c_int","highlight_start":1,"highlight_end":60},{"text":"                        || c as libc::c_int == 0xa as libc::c_int) as libc::c_int","highlight_start":1,"highlight_end":82},{"text":"                } != 0","highlight_start":1,"highlight_end":23},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    if quoted == 0 {","highlight_start":1,"highlight_end":37},{"text":"                        if quoted == 0 {","highlight_start":1,"highlight_end":41},{"text":"                            entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":72},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":81},{"text":"                            *((*p).entry_buf)","highlight_start":1,"highlight_end":46},{"text":"                                .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":92},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        if cb1.is_some()","highlight_start":1,"highlight_end":41},{"text":"                            && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":84},{"text":"                            && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":86},{"text":"                        {","highlight_start":1,"highlight_end":26},{"text":"                            cb1","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":76},{"text":"                        } else if cb1.is_some() {","highlight_start":1,"highlight_end":50},{"text":"                            cb1","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":89},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                        quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":56},{"text":"                        entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":54},{"text":"                        if cb2.is_some() {","highlight_start":1,"highlight_end":43},{"text":"                            cb2","highlight_start":1,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(c as libc::c_int, data);","highlight_start":1,"highlight_end":59},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                        quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":56},{"text":"                        entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":54},{"text":"                    } else {","highlight_start":1,"highlight_end":29},{"text":"                        let fresh5 = entry_pos;","highlight_start":1,"highlight_end":48},{"text":"                        entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":63},{"text":"                        *((*p).entry_buf).offset(fresh5 as isize) = c;","highlight_start":1,"highlight_end":71},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else if quoted == 0","highlight_start":1,"highlight_end":38},{"text":"                    && (if is_space.is_some() {","highlight_start":1,"highlight_end":48},{"text":"                        is_space.expect(\"non-null function pointer\")(c)","highlight_start":1,"highlight_end":72},{"text":"                    } else {","highlight_start":1,"highlight_end":29},{"text":"                        (c as libc::c_int == 0x20 as libc::c_int","highlight_start":1,"highlight_end":65},{"text":"                            || c as libc::c_int == 0x9 as libc::c_int) as libc::c_int","highlight_start":1,"highlight_end":86},{"text":"                    }) != 0","highlight_start":1,"highlight_end":28},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fresh6 = entry_pos;","highlight_start":1,"highlight_end":44},{"text":"                    entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":59},{"text":"                    *((*p).entry_buf).offset(fresh6 as isize) = c;","highlight_start":1,"highlight_end":67},{"text":"                    spaces = spaces.wrapping_add(1);","highlight_start":1,"highlight_end":53},{"text":"                    spaces;","highlight_start":1,"highlight_end":28},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    let fresh7 = entry_pos;","highlight_start":1,"highlight_end":44},{"text":"                    entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":59},{"text":"                    *((*p).entry_buf).offset(fresh7 as isize) = c;","highlight_start":1,"highlight_end":67},{"text":"                    spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":57},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            3 => {","highlight_start":1,"highlight_end":19},{"text":"                if c as libc::c_int == delim as libc::c_int {","highlight_start":1,"highlight_end":62},{"text":"                    entry_pos = entry_pos","highlight_start":1,"highlight_end":42},{"text":"                        .wrapping_sub(spaces.wrapping_add(1 as libc::c_int as size_t));","highlight_start":1,"highlight_end":88},{"text":"                    if quoted == 0 {","highlight_start":1,"highlight_end":37},{"text":"                        entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":68},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":77},{"text":"                        *((*p).entry_buf)","highlight_start":1,"highlight_end":42},{"text":"                            .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":88},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    if cb1.is_some()","highlight_start":1,"highlight_end":37},{"text":"                        && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":80},{"text":"                        && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":82},{"text":"                    {","highlight_start":1,"highlight_end":22},{"text":"                        cb1","highlight_start":1,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":72},{"text":"                    } else if cb1.is_some() {","highlight_start":1,"highlight_end":46},{"text":"                        cb1","highlight_start":1,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":85},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":57},{"text":"                    quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":52},{"text":"                    entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":50},{"text":"                } else if if is_term.is_some() {","highlight_start":1,"highlight_end":49},{"text":"                    is_term.expect(\"non-null function pointer\")(c)","highlight_start":1,"highlight_end":67},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    (c as libc::c_int == 0xd as libc::c_int","highlight_start":1,"highlight_end":60},{"text":"                        || c as libc::c_int == 0xa as libc::c_int) as libc::c_int","highlight_start":1,"highlight_end":82},{"text":"                } != 0","highlight_start":1,"highlight_end":23},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    entry_pos = entry_pos","highlight_start":1,"highlight_end":42},{"text":"                        .wrapping_sub(spaces.wrapping_add(1 as libc::c_int as size_t));","highlight_start":1,"highlight_end":88},{"text":"                    if quoted == 0 {","highlight_start":1,"highlight_end":37},{"text":"                        entry_pos = entry_pos.wrapping_sub(spaces);","highlight_start":1,"highlight_end":68},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    if (*p).options as libc::c_int & 8 as libc::c_int != 0 {","highlight_start":1,"highlight_end":77},{"text":"                        *((*p).entry_buf)","highlight_start":1,"highlight_end":42},{"text":"                            .offset(entry_pos as isize) = '\\0' as i32 as libc::c_uchar;","highlight_start":1,"highlight_end":88},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    if cb1.is_some()","highlight_start":1,"highlight_end":37},{"text":"                        && (*p).options as libc::c_int & 16 as libc::c_int != 0","highlight_start":1,"highlight_end":80},{"text":"                        && quoted == 0 && entry_pos == 0 as libc::c_int as size_t","highlight_start":1,"highlight_end":82},{"text":"                    {","highlight_start":1,"highlight_end":22},{"text":"                        cb1","highlight_start":1,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":72},{"text":"                    } else if cb1.is_some() {","highlight_start":1,"highlight_end":46},{"text":"                        cb1","highlight_start":1,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )((*p).entry_buf as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":85},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    pstate = 1 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":57},{"text":"                    quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":52},{"text":"                    entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":50},{"text":"                    if cb2.is_some() {","highlight_start":1,"highlight_end":39},{"text":"                        cb2.expect(\"non-null function pointer\")(c as libc::c_int, data);","highlight_start":1,"highlight_end":89},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    pstate = 0 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":57},{"text":"                    quoted = spaces as libc::c_int;","highlight_start":1,"highlight_end":52},{"text":"                    entry_pos = quoted as size_t;","highlight_start":1,"highlight_end":50},{"text":"                } else if if is_space.is_some() {","highlight_start":1,"highlight_end":50},{"text":"                    is_space.expect(\"non-null function pointer\")(c)","highlight_start":1,"highlight_end":68},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    (c as libc::c_int == 0x20 as libc::c_int","highlight_start":1,"highlight_end":61},{"text":"                        || c as libc::c_int == 0x9 as libc::c_int) as libc::c_int","highlight_start":1,"highlight_end":82},{"text":"                } != 0","highlight_start":1,"highlight_end":23},{"text":"                {","highlight_start":1,"highlight_end":18},{"text":"                    let fresh8 = entry_pos;","highlight_start":1,"highlight_end":44},{"text":"                    entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":59},{"text":"                    *((*p).entry_buf).offset(fresh8 as isize) = c;","highlight_start":1,"highlight_end":67},{"text":"                    spaces = spaces.wrapping_add(1);","highlight_start":1,"highlight_end":53},{"text":"                    spaces;","highlight_start":1,"highlight_end":28},{"text":"                } else if c as libc::c_int == quote as libc::c_int {","highlight_start":1,"highlight_end":69},{"text":"                    if spaces != 0 {","highlight_start":1,"highlight_end":37},{"text":"                        if (*p).options as libc::c_int & 1 as libc::c_int != 0 {","highlight_start":1,"highlight_end":81},{"text":"                            (*p).status = 1 as libc::c_int;","highlight_start":1,"highlight_end":60},{"text":"                            (*p).quoted = quoted;","highlight_start":1,"highlight_end":50},{"text":"                            (*p).pstate = pstate;","highlight_start":1,"highlight_end":50},{"text":"                            (*p).spaces = spaces;","highlight_start":1,"highlight_end":50},{"text":"                            (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":56},{"text":"                            return pos.wrapping_sub(1 as libc::c_int as size_t);","highlight_start":1,"highlight_end":81},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                        spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":61},{"text":"                        let fresh9 = entry_pos;","highlight_start":1,"highlight_end":48},{"text":"                        entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":63},{"text":"                        *((*p).entry_buf).offset(fresh9 as isize) = c;","highlight_start":1,"highlight_end":71},{"text":"                    } else {","highlight_start":1,"highlight_end":29},{"text":"                        pstate = 2 as libc::c_int;","highlight_start":1,"highlight_end":51},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    if (*p).options as libc::c_int & 1 as libc::c_int != 0 {","highlight_start":1,"highlight_end":77},{"text":"                        (*p).status = 1 as libc::c_int;","highlight_start":1,"highlight_end":56},{"text":"                        (*p).quoted = quoted;","highlight_start":1,"highlight_end":46},{"text":"                        (*p).pstate = pstate;","highlight_start":1,"highlight_end":46},{"text":"                        (*p).spaces = spaces;","highlight_start":1,"highlight_end":46},{"text":"                        (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":52},{"text":"                        return pos.wrapping_sub(1 as libc::c_int as size_t);","highlight_start":1,"highlight_end":77},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    pstate = 2 as libc::c_int;","highlight_start":1,"highlight_end":47},{"text":"                    spaces = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":57},{"text":"                    let fresh10 = entry_pos;","highlight_start":1,"highlight_end":45},{"text":"                    entry_pos = entry_pos.wrapping_add(1);","highlight_start":1,"highlight_end":59},{"text":"                    *((*p).entry_buf).offset(fresh10 as isize) = c;","highlight_start":1,"highlight_end":68},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _ => {}","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    (*p).quoted = quoted;","highlight_start":1,"highlight_end":26},{"text":"    (*p).pstate = pstate;","highlight_start":1,"highlight_end":26},{"text":"    (*p).spaces = spaces;","highlight_start":1,"highlight_end":26},{"text":"    (*p).entry_pos = entry_pos;","highlight_start":1,"highlight_end":32},{"text":"    return pos;","highlight_start":1,"highlight_end":16},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:460:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_parse(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut p: *mut csv_parser,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m462\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut s: *const libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m463\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut len: size_t,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return pos;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"called `expect` on `is_space` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":20162,"byte_end":20206,"line_start":555,"line_end":555,"column_start":21,"column_end":65,"is_primary":true,"text":[{"text":"                    is_space.expect(\"non-null function pointer\")(c)","highlight_start":21,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":20116,"byte_end":20138,"line_start":554,"line_end":554,"column_start":20,"column_end":42,"is_primary":true,"text":[{"text":"                if (if is_space.is_some() {","highlight_start":20,"highlight_end":42}],"label":null,"suggested_replacement":"if let Some(..) = is_space","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `is_space` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:555:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if (if is_space.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = is_space`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    is_space.expect(\"non-null function pointer\")(c)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `is_term` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":20583,"byte_end":20626,"line_start":564,"line_end":564,"column_start":21,"column_end":64,"is_primary":true,"text":[{"text":"                    is_term.expect(\"non-null function pointer\")(c)","highlight_start":21,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":20539,"byte_end":20559,"line_start":563,"line_end":563,"column_start":20,"column_end":40,"is_primary":true,"text":[{"text":"                if if is_term.is_some() {","highlight_start":20,"highlight_end":40}],"label":null,"suggested_replacement":"if let Some(..) = is_term","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `is_term` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:564:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m563\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if if is_term.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = is_term`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m564\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    is_term.expect(\"non-null function pointer\")(c)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb1` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":21315,"byte_end":21328,"line_start":578,"line_end":578,"column_start":28,"column_end":41,"is_primary":false,"text":[{"text":"                        if cb1.is_some()","highlight_start":28,"highlight_end":41}],"label":"the check is happening here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/libcsv.rs","byte_start":21557,"byte_end":21703,"line_start":582,"line_end":585,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"                            cb1","highlight_start":29,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using `if let` or `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb1` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:582:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        if cb1.is_some()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe check is happening here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try using `if let` or `match`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb2` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":22354,"byte_end":22500,"line_start":597,"line_end":600,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"                            cb2","highlight_start":29,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(c as libc::c_int, data);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":22306,"byte_end":22322,"line_start":596,"line_end":596,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"                        if cb2.is_some() {","highlight_start":25,"highlight_end":41}],"label":null,"suggested_replacement":"if let Some(..) = cb2","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb2` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:597:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m596\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        if cb2.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = cb2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m597\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            cb2\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m598\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m599\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m600\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                )(c as libc::c_int, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb2` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":22937,"byte_end":23083,"line_start":608,"line_end":611,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"                            cb2","highlight_start":29,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(c as libc::c_int, data);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":22889,"byte_end":22905,"line_start":607,"line_end":607,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"                        if cb2.is_some() {","highlight_start":25,"highlight_end":41}],"label":null,"suggested_replacement":"if let Some(..) = cb2","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb2` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:608:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        if cb2.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = cb2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m608\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            cb2\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m609\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m610\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m611\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                )(c as libc::c_int, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb1` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":23842,"byte_end":23855,"line_start":626,"line_end":626,"column_start":24,"column_end":37,"is_primary":false,"text":[{"text":"                    if cb1.is_some()","highlight_start":24,"highlight_end":37}],"label":"the check is happening here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/libcsv.rs","byte_start":24068,"byte_end":24202,"line_start":630,"line_end":633,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"                        cb1","highlight_start":25,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using `if let` or `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb1` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:630:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m626\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if cb1.is_some()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe check is happening here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m631\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m633\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try using `if let` or `match`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb1` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":27097,"byte_end":27110,"line_start":689,"line_end":689,"column_start":28,"column_end":41,"is_primary":false,"text":[{"text":"                        if cb1.is_some()","highlight_start":28,"highlight_end":41}],"label":"the check is happening here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/libcsv.rs","byte_start":27339,"byte_end":27485,"line_start":693,"line_end":696,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"                            cb1","highlight_start":29,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using `if let` or `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb1` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:693:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m689\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        if cb1.is_some()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe check is happening here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m693\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m694\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m695\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try using `if let` or `match`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `is_term` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":28157,"byte_end":28200,"line_start":709,"line_end":709,"column_start":21,"column_end":64,"is_primary":true,"text":[{"text":"                    is_term.expect(\"non-null function pointer\")(c)","highlight_start":21,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":28113,"byte_end":28133,"line_start":708,"line_end":708,"column_start":27,"column_end":47,"is_primary":true,"text":[{"text":"                } else if if is_term.is_some() {","highlight_start":27,"highlight_end":47}],"label":null,"suggested_replacement":"if let Some(..) = is_term","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `is_term` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:709:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m708\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                } else if if is_term.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = is_term`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m709\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    is_term.expect(\"non-null function pointer\")(c)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb1` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":28874,"byte_end":28887,"line_start":723,"line_end":723,"column_start":28,"column_end":41,"is_primary":false,"text":[{"text":"                        if cb1.is_some()","highlight_start":28,"highlight_end":41}],"label":"the check is happening here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/libcsv.rs","byte_start":29116,"byte_end":29262,"line_start":727,"line_end":730,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"                            cb1","highlight_start":29,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using `if let` or `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb1` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:727:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m723\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        if cb1.is_some()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe check is happening here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m727\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m728\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m729\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m730\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try using `if let` or `match`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb2` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":29913,"byte_end":30059,"line_start":742,"line_end":745,"column_start":29,"column_end":34,"is_primary":true,"text":[{"text":"                            cb2","highlight_start":29,"highlight_end":32},{"text":"                                .expect(","highlight_start":1,"highlight_end":41},{"text":"                                    \"non-null function pointer\",","highlight_start":1,"highlight_end":65},{"text":"                                )(c as libc::c_int, data);","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":29865,"byte_end":29881,"line_start":741,"line_end":741,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"                        if cb2.is_some() {","highlight_start":25,"highlight_end":41}],"label":null,"suggested_replacement":"if let Some(..) = cb2","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb2` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:742:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m741\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        if cb2.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = cb2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m742\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            cb2\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m743\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m744\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                    \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m745\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                )(c as libc::c_int, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb1` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":32117,"byte_end":32130,"line_start":787,"line_end":787,"column_start":24,"column_end":37,"is_primary":false,"text":[{"text":"                    if cb1.is_some()","highlight_start":24,"highlight_end":37}],"label":"the check is happening here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/libcsv.rs","byte_start":32343,"byte_end":32477,"line_start":791,"line_end":794,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"                        cb1","highlight_start":25,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using `if let` or `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb1` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:791:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m787\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if cb1.is_some()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe check is happening here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m791\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m792\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m793\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m794\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try using `if let` or `match`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb1` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":33865,"byte_end":33878,"line_start":821,"line_end":821,"column_start":24,"column_end":37,"is_primary":false,"text":[{"text":"                    if cb1.is_some()","highlight_start":24,"highlight_end":37}],"label":"the check is happening here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/libcsv.rs","byte_start":34091,"byte_end":34225,"line_start":825,"line_end":828,"column_start":25,"column_end":30,"is_primary":true,"text":[{"text":"                        cb1","highlight_start":25,"highlight_end":28},{"text":"                            .expect(","highlight_start":1,"highlight_end":37},{"text":"                                \"non-null function pointer\",","highlight_start":1,"highlight_end":61},{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using `if let` or `match`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb1` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:825:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m821\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                    if cb1.is_some()\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthe check is happening here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m825\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        cb1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m826\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            .expect(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m827\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                                \"non-null function pointer\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m828\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________________________^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try using `if let` or `match`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `cb2` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":34828,"byte_end":34867,"line_start":840,"line_end":840,"column_start":25,"column_end":64,"is_primary":true,"text":[{"text":"                        cb2.expect(\"non-null function pointer\")(c as libc::c_int, data);","highlight_start":25,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":34784,"byte_end":34800,"line_start":839,"line_end":839,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"                    if cb2.is_some() {","highlight_start":21,"highlight_end":37}],"label":null,"suggested_replacement":"if let Some(..) = cb2","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `cb2` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:840:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m839\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    if cb2.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = cb2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m840\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        cb2.expect(\"non-null function pointer\")(c as libc::c_int, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"called `expect` on `is_space` after checking its variant with `is_some`","code":{"code":"clippy::unnecessary_unwrap","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":35198,"byte_end":35242,"line_start":847,"line_end":847,"column_start":21,"column_end":65,"is_primary":true,"text":[{"text":"                    is_space.expect(\"non-null function pointer\")(c)","highlight_start":21,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":35153,"byte_end":35174,"line_start":846,"line_end":846,"column_start":27,"column_end":48,"is_primary":true,"text":[{"text":"                } else if if is_space.is_some() {","highlight_start":27,"highlight_end":48}],"label":null,"suggested_replacement":"if let Some(..) = is_space","suggestion_applicability":"Unspecified","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: called `expect` on `is_space` after checking its variant with `is_some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:847:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m846\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                } else if if is_space.is_some() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `if let Some(..) = is_space`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    is_space.expect(\"non-null function pointer\")(c)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":37567,"byte_end":37578,"line_start":898,"line_end":898,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    return pos;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":37567,"byte_end":37578,"line_start":898,"line_end":898,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    return pos;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"pos","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:898:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m898\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return pos;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `pos`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unnecessary operation","code":{"code":"clippy::unnecessary_operation","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":17455,"byte_end":18347,"line_start":487,"line_end":507,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_3937: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                321 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 125],","highlight_start":1,"highlight_end":32},{"text":"                    &[libc::c_char; 125],","highlight_start":1,"highlight_end":42},{"text":"                >(","highlight_start":1,"highlight_end":19},{"text":"                    b\"size_t csv_parse(struct csv_parser *, const void *, size_t, void (*)(void *, size_t, void *), void (*)(int, void *), void *)\\0\",","highlight_start":1,"highlight_end":151},{"text":"                ))","highlight_start":1,"highlight_end":19},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"statement can be reduced to","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":17455,"byte_end":18347,"line_start":487,"line_end":507,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    'c_3937: {","highlight_start":5,"highlight_end":15},{"text":"        if !p.is_null()","highlight_start":1,"highlight_end":24},{"text":"            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)","highlight_start":1,"highlight_end":84},{"text":"                .is_null()","highlight_start":1,"highlight_end":27},{"text":"        {} else {","highlight_start":1,"highlight_end":18},{"text":"            __assert_fail(","highlight_start":1,"highlight_end":27},{"text":"                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8","highlight_start":1,"highlight_end":68},{"text":"                    as *const libc::c_char,","highlight_start":1,"highlight_end":44},{"text":"                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"","highlight_start":1,"highlight_end":91},{"text":"                    as *const u8 as *const libc::c_char,","highlight_start":1,"highlight_end":57},{"text":"                321 as libc::c_int as libc::c_uint,","highlight_start":1,"highlight_end":52},{"text":"                (*::core::mem::transmute::<","highlight_start":1,"highlight_end":44},{"text":"                    &[u8; 125],","highlight_start":1,"highlight_end":32},{"text":"                    &[libc::c_char; 125],","highlight_start":1,"highlight_end":42},{"text":"                >(","highlight_start":1,"highlight_end":19},{"text":"                    b\"size_t csv_parse(struct csv_parser *, const void *, size_t, void (*)(void *, size_t, void *), void (*)(int, void *), void *)\\0\",","highlight_start":1,"highlight_end":151},{"text":"                ))","highlight_start":1,"highlight_end":19},{"text":"                    .as_ptr(),","highlight_start":1,"highlight_end":31},{"text":"            );","highlight_start":1,"highlight_end":15},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":"if !p.is_null()\n            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\n                .is_null()\n        {} else {\n            __assert_fail(\n                b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\n                    as *const libc::c_char,\n                b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\n                    as *const u8 as *const libc::c_char,\n                321 as libc::c_int as libc::c_uint,\n                (*::core::mem::transmute::<\n                    &[u8; 125],\n                    &[libc::c_char; 125],\n                >(\n                    b\"size_t csv_parse(struct csv_parser *, const void *, size_t, void (*)(void *, size_t, void *), void (*)(int, void *), void *)\\0\",\n                ))\n                    .as_ptr(),\n            );\n        };","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary operation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:487:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    'c_3937: {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m488\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m489\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m506\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m507\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|______^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: statement can be reduced to\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif !p.is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m488\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             && !(b\"received null csv_parser\\0\" as *const u8 as *const libc::c_char)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m489\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 .is_null()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m490\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         {} else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m491\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             __assert_fail(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m492\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"p && \\\"received null csv_parser\\\"\\0\" as *const u8\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m493\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m494\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 b\"/mnt/c/Users/mazin/Downloads/School/Research/datasets/libcsv/libcsv.c\\0\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m495\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     as *const u8 as *const libc::c_char,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m496\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 321 as libc::c_int as libc::c_uint,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m497\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 (*::core::mem::transmute::<\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m498\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[u8; 125],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m499\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     &[libc::c_char; 125],\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m500\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 >(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     b\"size_t csv_parse(struct csv_parser *, const void *, size_t, void (*)(void *, size_t, void *), void (*)(int, void *), void *)\\0\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                 ))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+                     .as_ptr(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m504\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+             );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m505\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":21704,"byte_end":21726,"line_start":585,"line_end":585,"column_start":35,"column_end":57,"is_primary":true,"text":[{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":35,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":21704,"byte_end":21726,"line_start":585,"line_end":585,"column_start":35,"column_end":57,"is_primary":true,"text":[{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":35,"highlight_end":57}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:585:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":24203,"byte_end":24225,"line_start":633,"line_end":633,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":24203,"byte_end":24225,"line_start":633,"line_end":633,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:633:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m633\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":27486,"byte_end":27508,"line_start":696,"line_end":696,"column_start":35,"column_end":57,"is_primary":true,"text":[{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":35,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":27486,"byte_end":27508,"line_start":696,"line_end":696,"column_start":35,"column_end":57,"is_primary":true,"text":[{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":35,"highlight_end":57}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:696:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":29263,"byte_end":29285,"line_start":730,"line_end":730,"column_start":35,"column_end":57,"is_primary":true,"text":[{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":35,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":29263,"byte_end":29285,"line_start":730,"line_end":730,"column_start":35,"column_end":57,"is_primary":true,"text":[{"text":"                                )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":35,"highlight_end":57}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:730:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m730\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":31216,"byte_end":31223,"line_start":768,"line_end":768,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"                    spaces;","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(clippy::no_effect)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:768:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m768\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    spaces;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::no_effect)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":32478,"byte_end":32500,"line_start":794,"line_end":794,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":32478,"byte_end":32500,"line_start":794,"line_end":794,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:794:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m794\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"`0 as *mut _` detected","code":{"code":"clippy::zero_ptr","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":34226,"byte_end":34248,"line_start":828,"line_end":828,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":34226,"byte_end":34248,"line_start":828,"line_end":828,"column_start":31,"column_end":53,"is_primary":true,"text":[{"text":"                            )(0 as *mut libc::c_void, entry_pos, data);","highlight_start":31,"highlight_end":53}],"label":null,"suggested_replacement":"std::ptr::null_mut::<libc::c_void>()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `0 as *mut _` detected\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:828:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m828\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   )(0 as *mut libc::c_void, entry_pos, data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `std::ptr::null_mut::<libc::c_void>()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":35708,"byte_end":35715,"line_start":857,"line_end":857,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"                    spaces;","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:857:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    spaces;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":37597,"byte_end":37921,"line_start":901,"line_end":914,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_write(","highlight_start":1,"highlight_end":36},{"text":"    mut dest: *mut libc::c_void,","highlight_start":1,"highlight_end":33},{"text":"    mut dest_size: size_t,","highlight_start":1,"highlight_end":27},{"text":"    mut src: *const libc::c_void,","highlight_start":1,"highlight_end":34},{"text":"    mut src_size: size_t,","highlight_start":1,"highlight_end":26},{"text":") -> size_t {","highlight_start":1,"highlight_end":14},{"text":"    return csv_write2(","highlight_start":1,"highlight_end":23},{"text":"        dest,","highlight_start":1,"highlight_end":14},{"text":"        dest_size,","highlight_start":1,"highlight_end":19},{"text":"        src,","highlight_start":1,"highlight_end":13},{"text":"        src_size,","highlight_start":1,"highlight_end":18},{"text":"        0x22 as libc::c_int as libc::c_uchar,","highlight_start":1,"highlight_end":46},{"text":"    );","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:901:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m901\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_write(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m902\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut dest: *mut libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m903\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut dest_size: size_t,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m904\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut src: *const libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m913\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m914\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":37777,"byte_end":37918,"line_start":907,"line_end":913,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    return csv_write2(","highlight_start":5,"highlight_end":23},{"text":"        dest,","highlight_start":1,"highlight_end":14},{"text":"        dest_size,","highlight_start":1,"highlight_end":19},{"text":"        src,","highlight_start":1,"highlight_end":13},{"text":"        src_size,","highlight_start":1,"highlight_end":18},{"text":"        0x22 as libc::c_int as libc::c_uchar,","highlight_start":1,"highlight_end":46},{"text":"    );","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":37777,"byte_end":37918,"line_start":907,"line_end":913,"column_start":5,"column_end":7,"is_primary":true,"text":[{"text":"    return csv_write2(","highlight_start":5,"highlight_end":23},{"text":"        dest,","highlight_start":1,"highlight_end":14},{"text":"        dest_size,","highlight_start":1,"highlight_end":19},{"text":"        src,","highlight_start":1,"highlight_end":13},{"text":"        src_size,","highlight_start":1,"highlight_end":18},{"text":"        0x22 as libc::c_int as libc::c_uchar,","highlight_start":1,"highlight_end":46},{"text":"    );","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":"csv_write2(\n        dest,\n        dest_size,\n        src,\n        src_size,\n        0x22 as libc::c_int as libc::c_uchar,\n    )","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:907:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m907\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return csv_write2(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m908\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        dest,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        dest_size,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m910\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        src,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m911\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        src_size,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m912\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        0x22 as libc::c_int as libc::c_uchar,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m913\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|______^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove `return`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m907\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mcsv_write2(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m908\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         dest,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         dest_size,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m910\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         src,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m911\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         src_size,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m912\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+         0x22 as libc::c_int as libc::c_uchar,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m913\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+     )\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":37937,"byte_end":38164,"line_start":916,"line_end":922,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_fwrite(","highlight_start":1,"highlight_end":37},{"text":"    mut fp: *mut FILE,","highlight_start":1,"highlight_end":23},{"text":"    mut src: *const libc::c_void,","highlight_start":1,"highlight_end":34},{"text":"    mut src_size: size_t,","highlight_start":1,"highlight_end":26},{"text":") -> libc::c_int {","highlight_start":1,"highlight_end":19},{"text":"    return csv_fwrite2(fp, src, src_size, 0x22 as libc::c_int as libc::c_uchar);","highlight_start":1,"highlight_end":81},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:916:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m916\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_fwrite(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m917\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut fp: *mut FILE,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m918\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut src: *const libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m919\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut src_size: size_t,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m920\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m) -> libc::c_int {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m921\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return csv_fwrite2(fp, src, src_size, 0x22 as libc::c_int as libc::c_uchar);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m922\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":38085,"byte_end":38161,"line_start":921,"line_end":921,"column_start":5,"column_end":81,"is_primary":true,"text":[{"text":"    return csv_fwrite2(fp, src, src_size, 0x22 as libc::c_int as libc::c_uchar);","highlight_start":5,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":38085,"byte_end":38161,"line_start":921,"line_end":921,"column_start":5,"column_end":81,"is_primary":true,"text":[{"text":"    return csv_fwrite2(fp, src, src_size, 0x22 as libc::c_int as libc::c_uchar);","highlight_start":5,"highlight_end":81}],"label":null,"suggested_replacement":"csv_fwrite2(fp, src, src_size, 0x22 as libc::c_int as libc::c_uchar)","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:921:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m921\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return csv_fwrite2(fp, src, src_size, 0x22 as libc::c_int as libc::c_uchar);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `csv_fwrite2(fp, src, src_size, 0x22 as libc::c_int as libc::c_uchar)`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":38180,"byte_end":39949,"line_start":924,"line_end":981,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_write2(","highlight_start":1,"highlight_end":37},{"text":"    mut dest: *mut libc::c_void,","highlight_start":1,"highlight_end":33},{"text":"    mut dest_size: size_t,","highlight_start":1,"highlight_end":27},{"text":"    mut src: *const libc::c_void,","highlight_start":1,"highlight_end":34},{"text":"    mut src_size: size_t,","highlight_start":1,"highlight_end":26},{"text":"    mut quote: libc::c_uchar,","highlight_start":1,"highlight_end":30},{"text":") -> size_t {","highlight_start":1,"highlight_end":14},{"text":"    let mut cdest: *mut libc::c_uchar = dest as *mut libc::c_uchar;","highlight_start":1,"highlight_end":68},{"text":"    let mut csrc: *const libc::c_uchar = src as *const libc::c_uchar;","highlight_start":1,"highlight_end":70},{"text":"    let mut chars: size_t = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":56},{"text":"    if src.is_null() {","highlight_start":1,"highlight_end":23},{"text":"        return 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    if dest.is_null() {","highlight_start":1,"highlight_end":24},{"text":"        dest_size = 0 as libc::c_int as size_t;","highlight_start":1,"highlight_end":48},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    if dest_size > 0 as libc::c_int as size_t {","highlight_start":1,"highlight_end":48},{"text":"        let fresh11 = cdest;","highlight_start":1,"highlight_end":29},{"text":"        cdest = cdest.offset(1);","highlight_start":1,"highlight_end":33},{"text":"        *fresh11 = quote;","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    chars = chars.wrapping_add(1);","highlight_start":1,"highlight_end":35},{"text":"    chars;","highlight_start":1,"highlight_end":11},{"text":"    while src_size != 0 {","highlight_start":1,"highlight_end":26},{"text":"        if *csrc as libc::c_int == quote as libc::c_int {","highlight_start":1,"highlight_end":58},{"text":"            if dest_size > chars {","highlight_start":1,"highlight_end":35},{"text":"                let fresh12 = cdest;","highlight_start":1,"highlight_end":37},{"text":"                cdest = cdest.offset(1);","highlight_start":1,"highlight_end":41},{"text":"                *fresh12 = quote;","highlight_start":1,"highlight_end":34},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            if chars < 18446744073709551615 as libc::c_ulong {","highlight_start":1,"highlight_end":63},{"text":"                chars = chars.wrapping_add(1);","highlight_start":1,"highlight_end":47},{"text":"                chars;","highlight_start":1,"highlight_end":23},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        if dest_size > chars {","highlight_start":1,"highlight_end":31},{"text":"            let fresh13 = cdest;","highlight_start":1,"highlight_end":33},{"text":"            cdest = cdest.offset(1);","highlight_start":1,"highlight_end":37},{"text":"            *fresh13 = *csrc;","highlight_start":1,"highlight_end":30},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        if chars < 18446744073709551615 as libc::c_ulong {","highlight_start":1,"highlight_end":59},{"text":"            chars = chars.wrapping_add(1);","highlight_start":1,"highlight_end":43},{"text":"            chars;","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        src_size = src_size.wrapping_sub(1);","highlight_start":1,"highlight_end":45},{"text":"        src_size;","highlight_start":1,"highlight_end":18},{"text":"        csrc = csrc.offset(1);","highlight_start":1,"highlight_end":31},{"text":"        csrc;","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    if dest_size > chars {","highlight_start":1,"highlight_end":27},{"text":"        *cdest = quote;","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    if chars < 18446744073709551615 as libc::c_ulong {","highlight_start":1,"highlight_end":55},{"text":"        chars = chars.wrapping_add(1);","highlight_start":1,"highlight_end":39},{"text":"        chars;","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    return chars;","highlight_start":1,"highlight_end":18},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:924:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m924\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_write2(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m925\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut dest: *mut libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m926\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut dest_size: size_t,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m927\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut src: *const libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m980\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return chars;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m981\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39933,"byte_end":39946,"line_start":980,"line_end":980,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    return chars;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":39933,"byte_end":39946,"line_start":980,"line_end":980,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    return chars;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"chars","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:980:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m980\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `chars`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":38928,"byte_end":38934,"line_start":946,"line_end":946,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    chars;","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:946:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m946\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39316,"byte_end":39322,"line_start":956,"line_end":956,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"                chars;","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:956:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m956\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39612,"byte_end":39618,"line_start":966,"line_end":966,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"            chars;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:966:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m966\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39685,"byte_end":39694,"line_start":969,"line_end":969,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        src_size;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:969:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        src_size;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39736,"byte_end":39741,"line_start":971,"line_end":971,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        csrc;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:971:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m971\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        csrc;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39914,"byte_end":39920,"line_start":978,"line_end":978,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        chars;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:978:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m978\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"unsafe function's docs miss `# Safety` section","code":{"code":"clippy::missing_safety_doc","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39965,"byte_end":41012,"line_start":983,"line_end":1014,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"pub unsafe extern \"C\" fn csv_fwrite2(","highlight_start":1,"highlight_end":38},{"text":"    mut fp: *mut FILE,","highlight_start":1,"highlight_end":23},{"text":"    mut src: *const libc::c_void,","highlight_start":1,"highlight_end":34},{"text":"    mut src_size: size_t,","highlight_start":1,"highlight_end":26},{"text":"    mut quote: libc::c_uchar,","highlight_start":1,"highlight_end":30},{"text":") -> libc::c_int {","highlight_start":1,"highlight_end":19},{"text":"    let mut csrc: *const libc::c_uchar = src as *const libc::c_uchar;","highlight_start":1,"highlight_end":70},{"text":"    if fp.is_null() || src.is_null() {","highlight_start":1,"highlight_end":39},{"text":"        return 0 as libc::c_int;","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    if fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {","highlight_start":1,"highlight_end":64},{"text":"        return -(1 as libc::c_int);","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    while src_size != 0 {","highlight_start":1,"highlight_end":26},{"text":"        if *csrc as libc::c_int == quote as libc::c_int {","highlight_start":1,"highlight_end":58},{"text":"            if fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {","highlight_start":1,"highlight_end":72},{"text":"                return -(1 as libc::c_int);","highlight_start":1,"highlight_end":44},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        if fputc(*csrc as libc::c_int, fp) == -(1 as libc::c_int) {","highlight_start":1,"highlight_end":68},{"text":"            return -(1 as libc::c_int);","highlight_start":1,"highlight_end":40},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        src_size = src_size.wrapping_sub(1);","highlight_start":1,"highlight_end":45},{"text":"        src_size;","highlight_start":1,"highlight_end":18},{"text":"        csrc = csrc.offset(1);","highlight_start":1,"highlight_end":31},{"text":"        csrc;","highlight_start":1,"highlight_end":14},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    if fputc(quote as libc::c_int, fp) == -(1 as libc::c_int) {","highlight_start":1,"highlight_end":64},{"text":"        return -(1 as libc::c_int);","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    return 0 as libc::c_int;","highlight_start":1,"highlight_end":29},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unsafe function's docs miss `# Safety` section\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:983:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m983\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub unsafe extern \"C\" fn csv_fwrite2(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m984\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut fp: *mut FILE,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m985\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut src: *const libc::c_void,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m986\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    mut src_size: size_t,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1013\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\u001b[0m\n\n"}
{"message":"unneeded `return` statement","code":{"code":"clippy::needless_return","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":40985,"byte_end":41009,"line_start":1013,"line_end":1013,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove `return`","code":null,"level":"help","spans":[{"file_name":"src/libcsv.rs","byte_start":40985,"byte_end":41009,"line_start":1013,"line_end":1013,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    return 0 as libc::c_int;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":"0 as libc::c_int","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unneeded `return` statement\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:1013:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1013\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return 0 as libc::c_int;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove `return`: `0 as libc::c_int`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":40807,"byte_end":40816,"line_start":1006,"line_end":1006,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        src_size;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:1006:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1006\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        src_size;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"statement with no effect","code":{"code":"clippy::no_effect","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":40858,"byte_end":40863,"line_start":1008,"line_end":1008,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        csrc;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: statement with no effect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:1008:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1008\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        csrc;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":31216,"byte_end":31223,"line_start":768,"line_end":768,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"                    spaces;","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(path_statements)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:768:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m768\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    spaces;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(path_statements)]` on by default\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":35708,"byte_end":35715,"line_start":857,"line_end":857,"column_start":21,"column_end":28,"is_primary":true,"text":[{"text":"                    spaces;","highlight_start":21,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:857:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    spaces;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":38928,"byte_end":38934,"line_start":946,"line_end":946,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    chars;","highlight_start":5,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:946:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m946\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39316,"byte_end":39322,"line_start":956,"line_end":956,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"                chars;","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:956:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m956\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39612,"byte_end":39618,"line_start":966,"line_end":966,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"            chars;","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:966:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m966\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39685,"byte_end":39694,"line_start":969,"line_end":969,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        src_size;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:969:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        src_size;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39736,"byte_end":39741,"line_start":971,"line_end":971,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        csrc;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:971:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m971\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        csrc;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":39914,"byte_end":39920,"line_start":978,"line_end":978,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        chars;","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:978:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m978\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        chars;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":40807,"byte_end":40816,"line_start":1006,"line_end":1006,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        src_size;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:1006:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1006\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        src_size;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"path statement with no effect","code":{"code":"path_statements","explanation":null},"level":"warning","spans":[{"file_name":"src/libcsv.rs","byte_start":40858,"byte_end":40863,"line_start":1008,"line_end":1008,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        csrc;","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: path statement with no effect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/libcsv.rs:1008:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1008\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        csrc;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"98 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 98 warnings emitted\u001b[0m\n\n"}
