   Compiling tinycc v0.0.0 (/mnt/c/Users/sebir/Documents/Research/tidyclippy/Edited_Code_and_Results/tinycc_edits)
warning: unused variable: `attr`
   --> src/x86_64_link.rs:554:9
    |
554 |     mut attr: *mut sym_attr,
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_attr`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unneeded `return` statement
   --> src/x86_64_link.rs:482:5
    |
482 | /     return (*p.offset(0 as libc::c_int as isize) as libc::c_int
483 | |         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
484 | |             << 8 as libc::c_int) as uint16_t;
    | |_____________________________________________^
    |
    = note: `#[warn(clippy::needless_return)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
482 ~     (*p.offset(0 as libc::c_int as isize) as libc::c_int
483 +         | (*p.offset(1 as libc::c_int as isize) as uint16_t as libc::c_int)
484 +             << 8 as libc::c_int) as uint16_t
    |

warning: unneeded `return` statement
   --> src/x86_64_link.rs:499:5
    |
499 | /     return read16le(p) as uint32_t
500 | |         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
501 | |             << 16 as libc::c_int;
    | |_________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
499 ~     read16le(p) as uint32_t
500 +         | (read16le(p.offset(2 as libc::c_int as isize)) as uint32_t)
501 +             << 16 as libc::c_int
    |

warning: unneeded `return` statement
   --> src/x86_64_link.rs:514:5
    |
514 | /     return read32le(p) as uint64_t
515 | |         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
516 | |             << 32 as libc::c_int;
    | |_________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
514 ~     read32le(p) as uint64_t
515 +         | (read32le(p.offset(4 as libc::c_int as isize)) as uint64_t)
516 +             << 32 as libc::c_int
    |

warning: unsafe function's docs miss `# Safety` section
   --> src/x86_64_link.rs:528:1
    |
528 | / pub unsafe extern "C" fn code_reloc(mut reloc_type: libc::c_int) -> libc::c_int {
529 | |     match reloc_type {
530 | |         10 | 11 | 1 | 26 | 29 | 9 | 41 | 42 | 22 | 3 | 27 | 6 | 5 | 8 | 25 | 19 | 20 | 21
531 | |         | 23 | 17 | 18 => return 0 as libc::c_int,
...   |
535 | |     return -(1 as libc::c_int);
536 | | }
    | |_^
    |
    = note: `#[warn(clippy::missing_safety_doc)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/x86_64_link.rs:535:5
    |
535 |     return -(1 as libc::c_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/x86_64_link.rs:538:1
    |
538 | / pub unsafe extern "C" fn gotplt_entry_type(mut reloc_type: libc::c_int) -> libc::c_int {
539 | |     match reloc_type {
540 | |         6 | 7 | 5 | 8 => return NO_GOTPLT_ENTRY as libc::c_int,
541 | |         10 | 11 | 1 | 2 | 24 => return AUTO_GOTPLT_ENTRY as libc::c_int,
...   |
548 | |     return -(1 as libc::c_int);
549 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/x86_64_link.rs:548:5
    |
548 |     return -(1 as libc::c_int);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `-(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/x86_64_link.rs:551:1
    |
551 | / pub unsafe extern "C" fn create_plt_entry(
552 | |     mut s1: *mut TCCState,
553 | |     mut got_offset: libc::c_uint,
554 | |     mut attr: *mut sym_attr,
...   |
596 | |     return plt_offset;
597 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/x86_64_link.rs:596:5
    |
596 |     return plt_offset;
    |     ^^^^^^^^^^^^^^^^^^ help: remove `return`: `plt_offset`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:557:31
    |
557 |     let mut p: *mut uint8_t = 0 as *mut uint8_t;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<uint8_t>()`
    |
    = note: `#[warn(clippy::zero_ptr)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/x86_64_link.rs:599:1
    |
599 | / pub unsafe extern "C" fn relocate_plt(mut s1: *mut TCCState) {
600 | |     let mut p: *mut uint8_t = 0 as *mut uint8_t;
601 | |     let mut p_end: *mut uint8_t = 0 as *mut uint8_t;
602 | |     if ((*s1).plt).is_null() {
...   |
640 | |     }
641 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:600:31
    |
600 |     let mut p: *mut uint8_t = 0 as *mut uint8_t;
    |                               ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<uint8_t>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:601:35
    |
601 |     let mut p_end: *mut uint8_t = 0 as *mut uint8_t;
    |                                   ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<uint8_t>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:624:40
    |
624 |         let mut rel: *mut Elf64_Rela = 0 as *mut Elf64_Rela;
    |                                        ^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<Elf64_Rela>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/x86_64_link.rs:638:13
    |
638 |             rel;
    |             ^^^^
    |
    = note: `#[warn(clippy::no_effect)]` on by default
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
    --> src/x86_64_link.rs:643:1
     |
643  | / pub unsafe extern "C" fn relocate(
644  | |     mut s1: *mut TCCState,
645  | |     mut rel: *mut Elf64_Rela,
646  | |     mut type_0: libc::c_int,
...    |
1021 | |     };
1022 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: statement with no effect
   --> src/x86_64_link.rs:666:21
    |
666 |                     (*s1).qrel;
    |                     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/x86_64_link.rs:676:21
    |
676 |                     (*s1).qrel;
    |                     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/x86_64_link.rs:700:17
    |
700 |                 (*s1).qrel;
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/x86_64_link.rs:717:21
    |
717 |                     (*s1).qrel;
    |                     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
   --> src/x86_64_link.rs:750:21
    |
750 |                     (*s1).qrel;
    |                     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:866:47
    |
866 |                 let mut sym: *mut Elf64_Sym = 0 as *mut Elf64_Sym;
    |                                               ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<Elf64_Sym>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:867:45
    |
867 |                 let mut sec: *mut Section = 0 as *mut Section;
    |                                             ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<Section>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:959:45
    |
959 |             let mut sym_0: *mut Elf64_Sym = 0 as *mut Elf64_Sym;
    |                                             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<Elf64_Sym>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:960:43
    |
960 |             let mut sec_0: *mut Section = 0 as *mut Section;
    |                                           ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<Section>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:971:45
    |
971 |             let mut sym_1: *mut Elf64_Sym = 0 as *mut Elf64_Sym;
    |                                             ^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<Elf64_Sym>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/x86_64_link.rs:972:43
    |
972 |             let mut sec_1: *mut Section = 0 as *mut Section;
    |                                           ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<Section>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/x86_64_link.rs:998:5
     |
998  | /     match current_block_70 {
999  | |         17246883947002594942 => {
1000 | |             let mut diff: libc::c_longlong = 0;
1001 | |             diff = (val as libc::c_longlong as libc::c_ulonglong)
...    |
1020 | |         _ => {}
1021 | |     };
     | |_____^
     |
     = note: `#[warn(clippy::single_match)]` on by default
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
998  ~     if current_block_70 == 17246883947002594942 {
999  +         let mut diff: libc::c_longlong = 0;
1000 +         diff = (val as libc::c_longlong as libc::c_ulonglong)
1001 +             .wrapping_sub(addr as libc::c_ulonglong) as libc::c_longlong;
1002 +         if diff < -(2147483648 as libc::c_longlong)
1003 +             || diff > 2147483647 as libc::c_longlong
1004 +         {
1005 +             tcc_enter_state(s1);
1006 +             (Some(
1007 +                 _tcc_error_noabort
1008 +                     as unsafe extern "C" fn(*const libc::c_char, ...) -> libc::c_int,
1009 +             ))
1010 +                 .expect(
1011 +                     "non-null function pointer",
1012 +                 )(
1013 +                 b"internal error: relocation failed\0" as *const u8
1014 +                     as *const libc::c_char,
1015 +             );
1016 +         }
1017 +         add32le(ptr, diff as int32_t);
1018 ~     };
     |

warning: path statement with no effect
   --> src/x86_64_link.rs:638:13
    |
638 |             rel;
    |             ^^^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: `tinycc` (lib) generated 30 warnings
    Finished dev [unoptimized + debuginfo] target(s) in 3.55s
